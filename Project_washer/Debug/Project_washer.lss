
Project_washer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000dc  00800100  00000f3c  00000fd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f3c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  008001dc  008001dc  000010ac  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001108  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000300  00000000  00000000  00001148  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c76  00000000  00000000  00001448  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ffb  00000000  00000000  000040be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001512  00000000  00000000  000050b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000070c  00000000  00000000  000065cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009cb  00000000  00000000  00006cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010a7  00000000  00000000  000076a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b0  00000000  00000000  0000874a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
   2:	00 00       	nop
   4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
   6:	00 00       	nop
   8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
   a:	00 00       	nop
   c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
   e:	00 00       	nop
  10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
  12:	00 00       	nop
  14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
  16:	00 00       	nop
  18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
  22:	00 00       	nop
  24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
  26:	00 00       	nop
  28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	51 c0       	rjmp	.+162    	; 0xd4 <__bad_interrupt>
  32:	00 00       	nop
  34:	4f c0       	rjmp	.+158    	; 0xd4 <__bad_interrupt>
  36:	00 00       	nop
  38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
  42:	00 00       	nop
  44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
  46:	00 00       	nop
  48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
  52:	00 00       	nop
  54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
  56:	00 00       	nop
  58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
  62:	00 00       	nop
  64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
  66:	00 00       	nop
  68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
  72:	00 00       	nop
  74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
  76:	00 00       	nop
  78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
  82:	00 00       	nop
  84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
  86:	00 00       	nop
  88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	ed 00       	.word	0x00ed	; ????
  8e:	f1 00       	.word	0x00f1	; ????
  90:	f6 00       	.word	0x00f6	; ????
  92:	fa 00       	.word	0x00fa	; ????
  94:	fe 00       	.word	0x00fe	; ????
  96:	02 01       	movw	r0, r4
  98:	06 01       	movw	r0, r12

0000009a <__ctors_end>:
  9a:	11 24       	eor	r1, r1
  9c:	1f be       	out	0x3f, r1	; 63
  9e:	cf ef       	ldi	r28, 0xFF	; 255
  a0:	d0 e1       	ldi	r29, 0x10	; 16
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
  a6:	11 e0       	ldi	r17, 0x01	; 1
  a8:	a0 e0       	ldi	r26, 0x00	; 0
  aa:	b1 e0       	ldi	r27, 0x01	; 1
  ac:	ec e3       	ldi	r30, 0x3C	; 60
  ae:	ff e0       	ldi	r31, 0x0F	; 15
  b0:	00 e0       	ldi	r16, 0x00	; 0
  b2:	0b bf       	out	0x3b, r16	; 59
  b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x14>
  b6:	07 90       	elpm	r0, Z+
  b8:	0d 92       	st	X+, r0
  ba:	ac 3d       	cpi	r26, 0xDC	; 220
  bc:	b1 07       	cpc	r27, r17
  be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0x10>

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	ac ed       	ldi	r26, 0xDC	; 220
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	af 3e       	cpi	r26, 0xEF	; 239
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	ed d2       	rcall	.+1498   	; 0x6ac <main>
  d2:	32 c7       	rjmp	.+3684   	; 0xf38 <_exit>

000000d4 <__bad_interrupt>:
  d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <Button_Init>:
  d6:	8a b3       	in	r24, 0x1a	; 26
  d8:	80 7f       	andi	r24, 0xF0	; 240
  da:	8a bb       	out	0x1a, r24	; 26
  dc:	08 95       	ret

000000de <GetButton>:
  de:	49 b3       	in	r20, 0x19	; 25
  e0:	21 e0       	ldi	r18, 0x01	; 1
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	08 2e       	mov	r0, r24
  e6:	02 c0       	rjmp	.+4      	; 0xec <GetButton+0xe>
  e8:	22 0f       	add	r18, r18
  ea:	33 1f       	adc	r19, r19
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <GetButton+0xa>
  f0:	50 e0       	ldi	r21, 0x00	; 0
  f2:	24 23       	and	r18, r20
  f4:	35 23       	and	r19, r21
  f6:	a9 01       	movw	r20, r18
  f8:	02 c0       	rjmp	.+4      	; 0xfe <GetButton+0x20>
  fa:	55 95       	asr	r21
  fc:	47 95       	ror	r20
  fe:	8a 95       	dec	r24
 100:	e2 f7       	brpl	.-8      	; 0xfa <GetButton+0x1c>
 102:	41 11       	cpse	r20, r1
 104:	07 c0       	rjmp	.+14     	; 0x114 <GetButton+0x36>
 106:	fb 01       	movw	r30, r22
 108:	80 81       	ld	r24, Z
 10a:	81 30       	cpi	r24, 0x01	; 1
 10c:	61 f4       	brne	.+24     	; 0x126 <GetButton+0x48>
 10e:	10 82       	st	Z, r1
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	08 95       	ret
 114:	41 30       	cpi	r20, 0x01	; 1
 116:	49 f4       	brne	.+18     	; 0x12a <GetButton+0x4c>
 118:	fb 01       	movw	r30, r22
 11a:	80 81       	ld	r24, Z
 11c:	81 11       	cpse	r24, r1
 11e:	07 c0       	rjmp	.+14     	; 0x12e <GetButton+0x50>
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	80 83       	st	Z, r24
 124:	08 95       	ret
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	08 95       	ret
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	08 95       	ret
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	08 95       	ret

00000132 <GetButton_0>:
 132:	63 e0       	ldi	r22, 0x03	; 3
 134:	71 e0       	ldi	r23, 0x01	; 1
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	d2 cf       	rjmp	.-92     	; 0xde <GetButton>
 13a:	08 95       	ret

0000013c <GetButton_1>:
 13c:	62 e0       	ldi	r22, 0x02	; 2
 13e:	71 e0       	ldi	r23, 0x01	; 1
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	cd cf       	rjmp	.-102    	; 0xde <GetButton>
 144:	08 95       	ret

00000146 <GetButton_2>:
 146:	61 e0       	ldi	r22, 0x01	; 1
 148:	71 e0       	ldi	r23, 0x01	; 1
 14a:	82 e0       	ldi	r24, 0x02	; 2
 14c:	c8 cf       	rjmp	.-112    	; 0xde <GetButton>
 14e:	08 95       	ret

00000150 <GetButton_3>:
 150:	60 e0       	ldi	r22, 0x00	; 0
 152:	71 e0       	ldi	r23, 0x01	; 1
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	c3 cf       	rjmp	.-122    	; 0xde <GetButton>
 158:	08 95       	ret

0000015a <LED_Init>:
{
	LED_PORT ^= (1<<LED_6);
}
void Toggle_LED_7()
{
	LED_PORT ^= (1<<LED_7);
 15a:	8a b3       	in	r24, 0x1a	; 26
 15c:	80 6f       	ori	r24, 0xF0	; 240
 15e:	8a bb       	out	0x1a, r24	; 26
 160:	08 95       	ret

00000162 <OFF_LED>:
 162:	8b b3       	in	r24, 0x1b	; 27
 164:	8f 70       	andi	r24, 0x0F	; 15
 166:	8b bb       	out	0x1b, r24	; 27
 168:	08 95       	ret

0000016a <On_LED_7>:
 16a:	df 9a       	sbi	0x1b, 7	; 27
 16c:	8b b3       	in	r24, 0x1b	; 27
 16e:	8f 78       	andi	r24, 0x8F	; 143
 170:	8b bb       	out	0x1b, r24	; 27
 172:	08 95       	ret

00000174 <On_LED_0011>:
}
void On_LED_0011()
{
	LED_PORT |= (1<<LED_6) | (1<<LED_7);
 174:	8b b3       	in	r24, 0x1b	; 27
 176:	80 6c       	ori	r24, 0xC0	; 192
 178:	8b bb       	out	0x1b, r24	; 27
	LED_PORT &= ~((1<<LED_4) | (1<<LED_5));
 17a:	8b b3       	in	r24, 0x1b	; 27
 17c:	8f 7c       	andi	r24, 0xCF	; 207
 17e:	8b bb       	out	0x1b, r24	; 27
 180:	08 95       	ret

00000182 <On_LED_0111>:
}
void On_LED_0111()
{
	LED_PORT |= (1<<LED_5) | (1<<LED_6) | (1<<LED_7);
 182:	8b b3       	in	r24, 0x1b	; 27
 184:	80 6e       	ori	r24, 0xE0	; 224
 186:	8b bb       	out	0x1b, r24	; 27
	LED_PORT &= ~((1<<LED_4));
 188:	dc 98       	cbi	0x1b, 4	; 27
 18a:	08 95       	ret

0000018c <On_LED_1111>:
}
void On_LED_1111()
{
	LED_PORT |= (1<<LED_4) | (1<<LED_5) | (1<<LED_6) | (1<<LED_7);
 18c:	8b b3       	in	r24, 0x1b	; 27
 18e:	80 6f       	ori	r24, 0xF0	; 240
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret

00000194 <Motor_Init>:
 194:	82 b1       	in	r24, 0x02	; 2
 196:	88 61       	ori	r24, 0x18	; 24
 198:	82 b9       	out	0x02, r24	; 2
 19a:	aa e8       	ldi	r26, 0x8A	; 138
 19c:	b0 e0       	ldi	r27, 0x00	; 0
 19e:	8c 91       	ld	r24, X
 1a0:	88 60       	ori	r24, 0x08	; 8
 1a2:	8c 93       	st	X, r24
 1a4:	eb e8       	ldi	r30, 0x8B	; 139
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	83 60       	ori	r24, 0x03	; 3
 1ac:	80 83       	st	Z, r24
 1ae:	80 81       	ld	r24, Z
 1b0:	80 68       	ori	r24, 0x80	; 128
 1b2:	80 83       	st	Z, r24
 1b4:	80 81       	ld	r24, Z
 1b6:	80 62       	ori	r24, 0x20	; 32
 1b8:	80 83       	st	Z, r24
 1ba:	8c 91       	ld	r24, X
 1bc:	82 60       	ori	r24, 0x02	; 2
 1be:	8c 93       	st	X, r24
 1c0:	08 95       	ret

000001c2 <Mode_State_Button>:
#include "ETC.h"
#include "./Device/Button.h"

void Mode_State_Button()
{
	if(GetButton_0() == 1)
 1c2:	b7 df       	rcall	.-146    	; 0x132 <GetButton_0>
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	29 f5       	brne	.+74     	; 0x212 <Mode_State_Button+0x50>
	{
		LCD_clear();
 1c8:	cb d1       	rcall	.+918    	; 0x560 <LCD_clear>
		switch(Get_WasherMode())
 1ca:	46 d2       	rcall	.+1164   	; 0x658 <Get_WasherMode>
 1cc:	87 30       	cpi	r24, 0x07	; 7
 1ce:	91 05       	cpc	r25, r1
 1d0:	00 f5       	brcc	.+64     	; 0x212 <Mode_State_Button+0x50>
 1d2:	fc 01       	movw	r30, r24
 1d4:	ea 5b       	subi	r30, 0xBA	; 186
 1d6:	ff 4f       	sbci	r31, 0xFF	; 255
 1d8:	cb c3       	rjmp	.+1942   	; 0x970 <__tablejump2__>
		{
			case REDEY:
			Set_WasherMode(POWER_SET);
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	3f c2       	rjmp	.+1150   	; 0x65e <Set_WasherMode>
			break;
 1e0:	08 95       	ret
			
			case POWER_SET:
			LCD_clear();
 1e2:	be d1       	rcall	.+892    	; 0x560 <LCD_clear>
 1e4:	82 e0       	ldi	r24, 0x02	; 2
			Set_WasherMode(MINU_SET);
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	3a c2       	rjmp	.+1140   	; 0x65e <Set_WasherMode>
 1ea:	08 95       	ret
			break;
			
			case MINU_SET:
			Set_WasherMode(SEC_SET);
 1ec:	83 e0       	ldi	r24, 0x03	; 3
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	36 c2       	rjmp	.+1132   	; 0x65e <Set_WasherMode>
			break;
 1f2:	08 95       	ret
			
			case SEC_SET:
			Set_WasherMode(RUN);
 1f4:	84 e0       	ldi	r24, 0x04	; 4
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	32 c2       	rjmp	.+1124   	; 0x65e <Set_WasherMode>
			break;
 1fa:	08 95       	ret
			
			case RUN:
			Set_WasherMode(STOP);
 1fc:	85 e0       	ldi	r24, 0x05	; 5
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	2e c2       	rjmp	.+1116   	; 0x65e <Set_WasherMode>
			break;
 202:	08 95       	ret
			
			case STOP:
			Set_WasherMode(RUN);
 204:	84 e0       	ldi	r24, 0x04	; 4
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	2a c2       	rjmp	.+1108   	; 0x65e <Set_WasherMode>
 20a:	08 95       	ret
			break;
 20c:	80 e0       	ldi	r24, 0x00	; 0
			
			case END:
			Set_WasherMode(REDEY);
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	26 c2       	rjmp	.+1100   	; 0x65e <Set_WasherMode>
 212:	08 95       	ret

00000214 <Power_state_Button>:
 214:	93 df       	rcall	.-218    	; 0x13c <GetButton_1>
 216:	81 30       	cpi	r24, 0x01	; 1
	}
}

void Power_state_Button()
{
	if(GetButton_1() == 1)
 218:	b1 f4       	brne	.+44     	; 0x246 <Power_state_Button+0x32>
	{
		LCD_clear();
 21a:	a2 d1       	rcall	.+836    	; 0x560 <LCD_clear>
		switch(Get_WasherPower())
 21c:	23 d2       	rcall	.+1094   	; 0x664 <Get_WasherPower>
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	91 05       	cpc	r25, r1
 222:	49 f0       	breq	.+18     	; 0x236 <Power_state_Button+0x22>
 224:	82 30       	cpi	r24, 0x02	; 2
 226:	91 05       	cpc	r25, r1
 228:	51 f0       	breq	.+20     	; 0x23e <Power_state_Button+0x2a>
 22a:	89 2b       	or	r24, r25
 22c:	21 f5       	brne	.+72     	; 0x276 <Power_state_Button+0x62>
		{
			case POWER_LV1:
			Set_WasherPower(POWER_LV2);
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	1b c2       	rjmp	.+1078   	; 0x66a <Set_WasherPower>
			break;
 234:	08 95       	ret
			
			case POWER_LV2:
			Set_WasherPower(POWER_LV3);
 236:	82 e0       	ldi	r24, 0x02	; 2
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	17 c2       	rjmp	.+1070   	; 0x66a <Set_WasherPower>
			break;
			
			case POWER_LV3:
			Set_WasherPower(POWER_LV1);
 23c:	08 95       	ret
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	90 e0       	ldi	r25, 0x00	; 0
			break;
 242:	13 c2       	rjmp	.+1062   	; 0x66a <Set_WasherPower>
		}
	}
	else if(GetButton_2() == 1)
 244:	08 95       	ret
 246:	7f df       	rcall	.-258    	; 0x146 <GetButton_2>
 248:	81 30       	cpi	r24, 0x01	; 1
 24a:	a9 f4       	brne	.+42     	; 0x276 <Power_state_Button+0x62>
	{
		LCD_clear();
 24c:	89 d1       	rcall	.+786    	; 0x560 <LCD_clear>
 24e:	0a d2       	rcall	.+1044   	; 0x664 <Get_WasherPower>
		switch(Get_WasherPower())
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	91 05       	cpc	r25, r1
 254:	49 f0       	breq	.+18     	; 0x268 <Power_state_Button+0x54>
 256:	82 30       	cpi	r24, 0x02	; 2
 258:	91 05       	cpc	r25, r1
 25a:	51 f0       	breq	.+20     	; 0x270 <Power_state_Button+0x5c>
 25c:	89 2b       	or	r24, r25
 25e:	59 f4       	brne	.+22     	; 0x276 <Power_state_Button+0x62>
		{
			case POWER_LV1:
			Set_WasherPower(POWER_LV3);
 260:	82 e0       	ldi	r24, 0x02	; 2
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c2       	rjmp	.+1028   	; 0x66a <Set_WasherPower>
			break;
 266:	08 95       	ret
			
			case POWER_LV2:
			Set_WasherPower(POWER_LV1);
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	fe c1       	rjmp	.+1020   	; 0x66a <Set_WasherPower>
 26e:	08 95       	ret
			break;
 270:	81 e0       	ldi	r24, 0x01	; 1
			
			case POWER_LV3:
			Set_WasherPower(POWER_LV2);
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	fa c1       	rjmp	.+1012   	; 0x66a <Set_WasherPower>
 276:	08 95       	ret

00000278 <Stop_state_Button>:
 278:	6b df       	rcall	.-298    	; 0x150 <GetButton_3>
 27a:	81 30       	cpi	r24, 0x01	; 1
	}
}

void Stop_state_Button()
{
	if(GetButton_3() == 1)
 27c:	51 f5       	brne	.+84     	; 0x2d2 <Stop_state_Button+0x5a>
	{
		LCD_clear();
 27e:	70 d1       	rcall	.+736    	; 0x560 <LCD_clear>
		switch(Get_WasherMode())
 280:	eb d1       	rcall	.+982    	; 0x658 <Get_WasherMode>
 282:	83 30       	cpi	r24, 0x03	; 3
 284:	91 05       	cpc	r25, r1
 286:	b1 f0       	breq	.+44     	; 0x2b4 <Stop_state_Button+0x3c>
 288:	34 f4       	brge	.+12     	; 0x296 <Stop_state_Button+0x1e>
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	91 05       	cpc	r25, r1
 28e:	51 f0       	breq	.+20     	; 0x2a4 <Stop_state_Button+0x2c>
 290:	02 97       	sbiw	r24, 0x02	; 2
 292:	61 f0       	breq	.+24     	; 0x2ac <Stop_state_Button+0x34>
 294:	08 95       	ret
 296:	85 30       	cpi	r24, 0x05	; 5
 298:	91 05       	cpc	r25, r1
 29a:	a1 f0       	breq	.+40     	; 0x2c4 <Stop_state_Button+0x4c>
 29c:	7c f0       	brlt	.+30     	; 0x2bc <Stop_state_Button+0x44>
 29e:	06 97       	sbiw	r24, 0x06	; 6
 2a0:	a9 f0       	breq	.+42     	; 0x2cc <Stop_state_Button+0x54>
 2a2:	08 95       	ret
		{	
			case POWER_SET:
			Set_WasherMode(REDEY);
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	da c1       	rjmp	.+948    	; 0x65e <Set_WasherMode>
			break;
 2aa:	08 95       	ret
			
			case MINU_SET:
			Set_WasherMode(POWER_SET);
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	d6 c1       	rjmp	.+940    	; 0x65e <Set_WasherMode>
			break;
 2b2:	08 95       	ret
			
			case SEC_SET:
			Set_WasherMode(MINU_SET);
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	d2 c1       	rjmp	.+932    	; 0x65e <Set_WasherMode>
			break;
 2ba:	08 95       	ret
			
			case RUN:
			Set_WasherMode(SEC_SET);
 2bc:	83 e0       	ldi	r24, 0x03	; 3
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	ce c1       	rjmp	.+924    	; 0x65e <Set_WasherMode>
			break;
			
			case STOP:
			Set_WasherMode(REDEY);
 2c2:	08 95       	ret
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	ca c1       	rjmp	.+916    	; 0x65e <Set_WasherMode>
			break;
 2ca:	08 95       	ret
			
			case END:
			Set_WasherMode(REDEY);
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	c6 c1       	rjmp	.+908    	; 0x65e <Set_WasherMode>
 2d2:	08 95       	ret

000002d4 <Minu_state_Button>:
 2d4:	cf 93       	push	r28
		}
	}
}

void Minu_state_Button(uint8_t m)
{
 2d6:	c8 2f       	mov	r28, r24
	if(GetButton_1() == 1)
 2d8:	31 df       	rcall	.-414    	; 0x13c <GetButton_1>
 2da:	81 30       	cpi	r24, 0x01	; 1
 2dc:	59 f4       	brne	.+22     	; 0x2f4 <Minu_state_Button+0x20>
	{
		m += 5;
		Set_Minu(m);
 2de:	85 e0       	ldi	r24, 0x05	; 5
 2e0:	8c 0f       	add	r24, r28
 2e2:	90 e0       	ldi	r25, 0x00	; 0
		if(Get_Minu() >= 59)
 2e4:	c8 d1       	rcall	.+912    	; 0x676 <Set_Minu>
 2e6:	c4 d1       	rcall	.+904    	; 0x670 <Get_Minu>
 2e8:	cb 97       	sbiw	r24, 0x3b	; 59
		{
			m = 0;
			Set_Minu(m);
 2ea:	8c f0       	brlt	.+34     	; 0x30e <Minu_state_Button+0x3a>
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	c2 d1       	rcall	.+900    	; 0x676 <Set_Minu>
		}
	}
	else if(GetButton_2() == 1)
 2f2:	0d c0       	rjmp	.+26     	; 0x30e <Minu_state_Button+0x3a>
 2f4:	28 df       	rcall	.-432    	; 0x146 <GetButton_2>
 2f6:	81 30       	cpi	r24, 0x01	; 1
	{
		m -= 5;
		Set_Minu(m);
 2f8:	51 f4       	brne	.+20     	; 0x30e <Minu_state_Button+0x3a>
 2fa:	8b ef       	ldi	r24, 0xFB	; 251
 2fc:	8c 0f       	add	r24, r28
 2fe:	90 e0       	ldi	r25, 0x00	; 0
		if(Get_Minu() >= 59)
 300:	ba d1       	rcall	.+884    	; 0x676 <Set_Minu>
 302:	b6 d1       	rcall	.+876    	; 0x670 <Get_Minu>
 304:	cb 97       	sbiw	r24, 0x3b	; 59
 306:	1c f0       	brlt	.+6      	; 0x30e <Minu_state_Button+0x3a>
		{
			m = 55;
			Set_Minu(m);
 308:	87 e3       	ldi	r24, 0x37	; 55
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	b4 d1       	rcall	.+872    	; 0x676 <Set_Minu>
 30e:	cf 91       	pop	r28
		}
	}
}
 310:	08 95       	ret

00000312 <Sec_state_Button>:
 312:	cf 93       	push	r28

void Sec_state_Button(uint8_t s)
{
 314:	c8 2f       	mov	r28, r24
	if(GetButton_1() == 1)
 316:	12 df       	rcall	.-476    	; 0x13c <GetButton_1>
 318:	81 30       	cpi	r24, 0x01	; 1
 31a:	59 f4       	brne	.+22     	; 0x332 <Sec_state_Button+0x20>
	{
		s += 5;
		Set_Sec(s);
 31c:	85 e0       	ldi	r24, 0x05	; 5
 31e:	8c 0f       	add	r24, r28
 320:	90 e0       	ldi	r25, 0x00	; 0
		if(Get_Sec() >= 59)
 322:	af d1       	rcall	.+862    	; 0x682 <Set_Sec>
 324:	ab d1       	rcall	.+854    	; 0x67c <Get_Sec>
 326:	cb 97       	sbiw	r24, 0x3b	; 59
		{
			s = 0;
			Set_Sec(s);
 328:	8c f0       	brlt	.+34     	; 0x34c <Sec_state_Button+0x3a>
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	a9 d1       	rcall	.+850    	; 0x682 <Set_Sec>
		}
	}
	else if(GetButton_2() == 1)
 330:	0d c0       	rjmp	.+26     	; 0x34c <Sec_state_Button+0x3a>
 332:	09 df       	rcall	.-494    	; 0x146 <GetButton_2>
 334:	81 30       	cpi	r24, 0x01	; 1
	{
		s -= 5;
		Set_Sec(s);
 336:	51 f4       	brne	.+20     	; 0x34c <Sec_state_Button+0x3a>
 338:	8b ef       	ldi	r24, 0xFB	; 251
 33a:	8c 0f       	add	r24, r28
 33c:	90 e0       	ldi	r25, 0x00	; 0
		if(Get_Sec() >= 59)
 33e:	a1 d1       	rcall	.+834    	; 0x682 <Set_Sec>
 340:	9d d1       	rcall	.+826    	; 0x67c <Get_Sec>
 342:	cb 97       	sbiw	r24, 0x3b	; 59
 344:	1c f0       	brlt	.+6      	; 0x34c <Sec_state_Button+0x3a>
		{
			s = 55;
			Set_Sec(s);
 346:	87 e3       	ldi	r24, 0x37	; 55
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	9b d1       	rcall	.+822    	; 0x682 <Set_Sec>
 34c:	cf 91       	pop	r28
		}
	}
 34e:	08 95       	ret

00000350 <B2D>:
 350:	98 2f       	mov	r25, r24
 352:	92 95       	swap	r25
 354:	9f 70       	andi	r25, 0x0F	; 15
 356:	99 0f       	add	r25, r25
 358:	29 2f       	mov	r18, r25
 35a:	22 0f       	add	r18, r18
 35c:	22 0f       	add	r18, r18
 35e:	92 0f       	add	r25, r18
 360:	8f 70       	andi	r24, 0x0F	; 15
 362:	89 0f       	add	r24, r25
 364:	08 95       	ret

00000366 <DS3231_Init>:
 366:	5b c0       	rjmp	.+182    	; 0x41e <I2C_Init>
 368:	08 95       	ret

0000036a <DS3231_GetTimeDate>:
 36a:	0f 93       	push	r16
 36c:	1f 93       	push	r17
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	cd b7       	in	r28, 0x3d	; 61
 374:	de b7       	in	r29, 0x3e	; 62
 376:	27 97       	sbiw	r28, 0x07	; 7
 378:	0f b6       	in	r0, 0x3f	; 63
 37a:	f8 94       	cli
 37c:	de bf       	out	0x3e, r29	; 62
 37e:	0f be       	out	0x3f, r0	; 63
 380:	cd bf       	out	0x3d, r28	; 61
 382:	8c 01       	movw	r16, r24
 384:	27 e0       	ldi	r18, 0x07	; 7
 386:	ae 01       	movw	r20, r28
 388:	4f 5f       	subi	r20, 0xFF	; 255
 38a:	5f 4f       	sbci	r21, 0xFF	; 255
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	88 e6       	ldi	r24, 0x68	; 104
 390:	5d d0       	rcall	.+186    	; 0x44c <I2C_RxBuffer>
 392:	89 81       	ldd	r24, Y+1	; 0x01
 394:	dd df       	rcall	.-70     	; 0x350 <B2D>
 396:	f8 01       	movw	r30, r16
 398:	80 83       	st	Z, r24
 39a:	8a 81       	ldd	r24, Y+2	; 0x02
 39c:	d9 df       	rcall	.-78     	; 0x350 <B2D>
 39e:	f8 01       	movw	r30, r16
 3a0:	81 83       	std	Z+1, r24	; 0x01
 3a2:	8b 81       	ldd	r24, Y+3	; 0x03
 3a4:	d5 df       	rcall	.-86     	; 0x350 <B2D>
 3a6:	f8 01       	movw	r30, r16
 3a8:	82 83       	std	Z+2, r24	; 0x02
 3aa:	8c 81       	ldd	r24, Y+4	; 0x04
 3ac:	d1 df       	rcall	.-94     	; 0x350 <B2D>
 3ae:	f8 01       	movw	r30, r16
 3b0:	83 83       	std	Z+3, r24	; 0x03
 3b2:	8d 81       	ldd	r24, Y+5	; 0x05
 3b4:	cd df       	rcall	.-102    	; 0x350 <B2D>
 3b6:	f8 01       	movw	r30, r16
 3b8:	84 83       	std	Z+4, r24	; 0x04
 3ba:	8e 81       	ldd	r24, Y+6	; 0x06
 3bc:	c9 df       	rcall	.-110    	; 0x350 <B2D>
 3be:	f8 01       	movw	r30, r16
 3c0:	85 83       	std	Z+5, r24	; 0x05
 3c2:	8f 81       	ldd	r24, Y+7	; 0x07
 3c4:	c5 df       	rcall	.-118    	; 0x350 <B2D>
 3c6:	f8 01       	movw	r30, r16
 3c8:	86 83       	std	Z+6, r24	; 0x06
 3ca:	27 96       	adiw	r28, 0x07	; 7
 3cc:	0f b6       	in	r0, 0x3f	; 63
 3ce:	f8 94       	cli
 3d0:	de bf       	out	0x3e, r29	; 62
 3d2:	0f be       	out	0x3f, r0	; 63
 3d4:	cd bf       	out	0x3d, r28	; 61
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	08 95       	ret

000003e0 <I2C_Start>:
 3e0:	84 ea       	ldi	r24, 0xA4	; 164
 3e2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 3e6:	e4 e7       	ldi	r30, 0x74	; 116
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	80 81       	ld	r24, Z
 3ec:	88 23       	and	r24, r24
 3ee:	ec f7       	brge	.-6      	; 0x3ea <I2C_Start+0xa>
 3f0:	08 95       	ret

000003f2 <I2C_TxDeviceAddr>:
 3f2:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 3f6:	84 e8       	ldi	r24, 0x84	; 132
 3f8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 3fc:	e4 e7       	ldi	r30, 0x74	; 116
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	88 23       	and	r24, r24
 404:	ec f7       	brge	.-6      	; 0x400 <__LOCK_REGION_LENGTH__>
 406:	08 95       	ret

00000408 <I2C_TxData>:
 408:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 40c:	84 e8       	ldi	r24, 0x84	; 132
 40e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 412:	e4 e7       	ldi	r30, 0x74	; 116
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	80 81       	ld	r24, Z
 418:	88 23       	and	r24, r24
 41a:	ec f7       	brge	.-6      	; 0x416 <I2C_TxData+0xe>
 41c:	08 95       	ret

0000041e <I2C_Init>:
 41e:	81 b3       	in	r24, 0x11	; 17
 420:	83 60       	ori	r24, 0x03	; 3
 422:	81 bb       	out	0x11, r24	; 17
 424:	88 e4       	ldi	r24, 0x48	; 72
 426:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 42a:	08 95       	ret

0000042c <I2C_TxByte>:
 42c:	cf 93       	push	r28
 42e:	df 93       	push	r29
 430:	d8 2f       	mov	r29, r24
 432:	c6 2f       	mov	r28, r22
 434:	d5 df       	rcall	.-86     	; 0x3e0 <I2C_Start>
 436:	8d 2f       	mov	r24, r29
 438:	88 0f       	add	r24, r24
 43a:	db df       	rcall	.-74     	; 0x3f2 <I2C_TxDeviceAddr>
 43c:	8c 2f       	mov	r24, r28
 43e:	e4 df       	rcall	.-56     	; 0x408 <I2C_TxData>
 440:	84 e9       	ldi	r24, 0x94	; 148
 442:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 446:	df 91       	pop	r29
 448:	cf 91       	pop	r28
 44a:	08 95       	ret

0000044c <I2C_RxBuffer>:
 44c:	ef 92       	push	r14
 44e:	ff 92       	push	r15
 450:	0f 93       	push	r16
 452:	1f 93       	push	r17
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
 458:	d8 2f       	mov	r29, r24
 45a:	16 2f       	mov	r17, r22
 45c:	f4 2e       	mov	r15, r20
 45e:	05 2f       	mov	r16, r21
 460:	e2 2e       	mov	r14, r18
 462:	be df       	rcall	.-132    	; 0x3e0 <I2C_Start>
 464:	8d 2f       	mov	r24, r29
 466:	88 0f       	add	r24, r24
 468:	c4 df       	rcall	.-120    	; 0x3f2 <I2C_TxDeviceAddr>
 46a:	81 2f       	mov	r24, r17
 46c:	cd df       	rcall	.-102    	; 0x408 <I2C_TxData>
 46e:	84 ea       	ldi	r24, 0xA4	; 164
 470:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 474:	e4 e7       	ldi	r30, 0x74	; 116
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	90 81       	ld	r25, Z
 47a:	99 23       	and	r25, r25
 47c:	ec f7       	brge	.-6      	; 0x478 <I2C_RxBuffer+0x2c>
 47e:	8d 2f       	mov	r24, r29
 480:	88 0f       	add	r24, r24
 482:	81 60       	ori	r24, 0x01	; 1
 484:	b6 df       	rcall	.-148    	; 0x3f2 <I2C_TxDeviceAddr>
 486:	ee 20       	and	r14, r14
 488:	29 f1       	breq	.+74     	; 0x4d4 <I2C_RxBuffer+0x88>
 48a:	af 2d       	mov	r26, r15
 48c:	b0 2f       	mov	r27, r16
 48e:	20 e0       	ldi	r18, 0x00	; 0
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	4e 2d       	mov	r20, r14
 494:	50 e0       	ldi	r21, 0x00	; 0
 496:	41 50       	subi	r20, 0x01	; 1
 498:	51 09       	sbc	r21, r1
 49a:	e4 e7       	ldi	r30, 0x74	; 116
 49c:	f0 e0       	ldi	r31, 0x00	; 0
 49e:	14 e8       	ldi	r17, 0x84	; 132
 4a0:	63 e7       	ldi	r22, 0x73	; 115
 4a2:	70 e0       	ldi	r23, 0x00	; 0
 4a4:	94 ec       	ldi	r25, 0xC4	; 196
 4a6:	24 17       	cp	r18, r20
 4a8:	35 07       	cpc	r19, r21
 4aa:	44 f4       	brge	.+16     	; 0x4bc <I2C_RxBuffer+0x70>
 4ac:	90 83       	st	Z, r25
 4ae:	80 81       	ld	r24, Z
 4b0:	88 23       	and	r24, r24
 4b2:	ec f7       	brge	.-6      	; 0x4ae <I2C_RxBuffer+0x62>
 4b4:	eb 01       	movw	r28, r22
 4b6:	88 81       	ld	r24, Y
 4b8:	8c 93       	st	X, r24
 4ba:	07 c0       	rjmp	.+14     	; 0x4ca <I2C_RxBuffer+0x7e>
 4bc:	10 83       	st	Z, r17
 4be:	80 81       	ld	r24, Z
 4c0:	88 23       	and	r24, r24
 4c2:	ec f7       	brge	.-6      	; 0x4be <I2C_RxBuffer+0x72>
 4c4:	eb 01       	movw	r28, r22
 4c6:	88 81       	ld	r24, Y
 4c8:	8c 93       	st	X, r24
 4ca:	2f 5f       	subi	r18, 0xFF	; 255
 4cc:	3f 4f       	sbci	r19, 0xFF	; 255
 4ce:	11 96       	adiw	r26, 0x01	; 1
 4d0:	2e 15       	cp	r18, r14
 4d2:	48 f3       	brcs	.-46     	; 0x4a6 <I2C_RxBuffer+0x5a>
 4d4:	84 e9       	ldi	r24, 0x94	; 148
 4d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 4da:	df 91       	pop	r29
 4dc:	cf 91       	pop	r28
 4de:	1f 91       	pop	r17
 4e0:	0f 91       	pop	r16
 4e2:	ff 90       	pop	r15
 4e4:	ef 90       	pop	r14
 4e6:	08 95       	ret

000004e8 <LCD_pulse_enable>:
 4e8:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 4ec:	64 60       	ori	r22, 0x04	; 4
 4ee:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 4f2:	87 e2       	ldi	r24, 0x27	; 39
 4f4:	9b df       	rcall	.-202    	; 0x42c <I2C_TxByte>
 4f6:	8f e9       	ldi	r24, 0x9F	; 159
 4f8:	9f e0       	ldi	r25, 0x0F	; 15
 4fa:	01 97       	sbiw	r24, 0x01	; 1
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <LCD_pulse_enable+0x12>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <LCD_pulse_enable+0x18>
 500:	00 00       	nop
 502:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 506:	6b 7f       	andi	r22, 0xFB	; 251
 508:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 50c:	87 e2       	ldi	r24, 0x27	; 39
 50e:	8e df       	rcall	.-228    	; 0x42c <I2C_TxByte>
 510:	8f e9       	ldi	r24, 0x9F	; 159
 512:	9f e0       	ldi	r25, 0x0F	; 15
 514:	01 97       	sbiw	r24, 0x01	; 1
 516:	f1 f7       	brne	.-4      	; 0x514 <LCD_pulse_enable+0x2c>
 518:	00 c0       	rjmp	.+0      	; 0x51a <LCD_pulse_enable+0x32>
 51a:	00 00       	nop
 51c:	08 95       	ret

0000051e <LCD_BackLightOn>:
 51e:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <__data_end>
 522:	88 60       	ori	r24, 0x08	; 8
 524:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <__data_end>
 528:	08 95       	ret

0000052a <LCD_WriteCommand>:
 52a:	cf 93       	push	r28
 52c:	c8 2f       	mov	r28, r24
 52e:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 532:	6e 70       	andi	r22, 0x0E	; 14
 534:	80 7f       	andi	r24, 0xF0	; 240
 536:	68 2b       	or	r22, r24
 538:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 53c:	87 e2       	ldi	r24, 0x27	; 39
 53e:	76 df       	rcall	.-276    	; 0x42c <I2C_TxByte>
 540:	d3 df       	rcall	.-90     	; 0x4e8 <LCD_pulse_enable>
 542:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 546:	6f 70       	andi	r22, 0x0F	; 15
 548:	20 e1       	ldi	r18, 0x10	; 16
 54a:	c2 9f       	mul	r28, r18
 54c:	c0 01       	movw	r24, r0
 54e:	11 24       	eor	r1, r1
 550:	68 2b       	or	r22, r24
 552:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 556:	87 e2       	ldi	r24, 0x27	; 39
 558:	69 df       	rcall	.-302    	; 0x42c <I2C_TxByte>
 55a:	c6 df       	rcall	.-116    	; 0x4e8 <LCD_pulse_enable>
 55c:	cf 91       	pop	r28
 55e:	08 95       	ret

00000560 <LCD_clear>:
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	e3 df       	rcall	.-58     	; 0x52a <LCD_WriteCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 564:	8f e3       	ldi	r24, 0x3F	; 63
 566:	9f e1       	ldi	r25, 0x1F	; 31
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	f1 f7       	brne	.-4      	; 0x568 <LCD_clear+0x8>
 56c:	00 c0       	rjmp	.+0      	; 0x56e <LCD_clear+0xe>
 56e:	00 00       	nop
 570:	08 95       	ret

00000572 <LCD_goto_XY>:
 572:	81 70       	andi	r24, 0x01	; 1
 574:	6f 70       	andi	r22, 0x0F	; 15
 576:	90 e4       	ldi	r25, 0x40	; 64
 578:	89 9f       	mul	r24, r25
 57a:	60 0d       	add	r22, r0
 57c:	11 24       	eor	r1, r1
 57e:	86 2f       	mov	r24, r22
 580:	80 58       	subi	r24, 0x80	; 128
 582:	d3 cf       	rjmp	.-90     	; 0x52a <LCD_WriteCommand>
 584:	08 95       	ret

00000586 <LCD_WriteCommandInit>:
 586:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 58a:	6e 70       	andi	r22, 0x0E	; 14
 58c:	80 7f       	andi	r24, 0xF0	; 240
 58e:	68 2b       	or	r22, r24
 590:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 594:	87 e2       	ldi	r24, 0x27	; 39
 596:	4a df       	rcall	.-364    	; 0x42c <I2C_TxByte>
 598:	a7 cf       	rjmp	.-178    	; 0x4e8 <LCD_pulse_enable>
 59a:	08 95       	ret

0000059c <LCD_Init>:
 59c:	40 df       	rcall	.-384    	; 0x41e <I2C_Init>
 59e:	2f ef       	ldi	r18, 0xFF	; 255
 5a0:	89 ef       	ldi	r24, 0xF9	; 249
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	21 50       	subi	r18, 0x01	; 1
 5a6:	80 40       	sbci	r24, 0x00	; 0
 5a8:	90 40       	sbci	r25, 0x00	; 0
 5aa:	e1 f7       	brne	.-8      	; 0x5a4 <LCD_Init+0x8>
 5ac:	00 c0       	rjmp	.+0      	; 0x5ae <LCD_Init+0x12>
 5ae:	00 00       	nop
 5b0:	80 e3       	ldi	r24, 0x30	; 48
 5b2:	e9 df       	rcall	.-46     	; 0x586 <LCD_WriteCommandInit>
 5b4:	8f e1       	ldi	r24, 0x1F	; 31
 5b6:	9e e4       	ldi	r25, 0x4E	; 78
 5b8:	01 97       	sbiw	r24, 0x01	; 1
 5ba:	f1 f7       	brne	.-4      	; 0x5b8 <LCD_Init+0x1c>
 5bc:	00 c0       	rjmp	.+0      	; 0x5be <LCD_Init+0x22>
 5be:	00 00       	nop
 5c0:	80 e3       	ldi	r24, 0x30	; 48
 5c2:	e1 df       	rcall	.-62     	; 0x586 <LCD_WriteCommandInit>
 5c4:	9f ef       	ldi	r25, 0xFF	; 255
 5c6:	23 ec       	ldi	r18, 0xC3	; 195
 5c8:	89 e0       	ldi	r24, 0x09	; 9
 5ca:	91 50       	subi	r25, 0x01	; 1
 5cc:	20 40       	sbci	r18, 0x00	; 0
 5ce:	80 40       	sbci	r24, 0x00	; 0
 5d0:	e1 f7       	brne	.-8      	; 0x5ca <LCD_Init+0x2e>
 5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <LCD_Init+0x38>
 5d4:	00 00       	nop
 5d6:	80 e3       	ldi	r24, 0x30	; 48
 5d8:	d6 df       	rcall	.-84     	; 0x586 <LCD_WriteCommandInit>
 5da:	88 e2       	ldi	r24, 0x28	; 40
 5dc:	d4 df       	rcall	.-88     	; 0x586 <LCD_WriteCommandInit>
 5de:	88 e2       	ldi	r24, 0x28	; 40
 5e0:	a4 df       	rcall	.-184    	; 0x52a <LCD_WriteCommand>
 5e2:	88 e0       	ldi	r24, 0x08	; 8
 5e4:	a2 df       	rcall	.-188    	; 0x52a <LCD_WriteCommand>
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	a0 df       	rcall	.-192    	; 0x52a <LCD_WriteCommand>
 5ea:	86 e0       	ldi	r24, 0x06	; 6
 5ec:	9e df       	rcall	.-196    	; 0x52a <LCD_WriteCommand>
 5ee:	97 df       	rcall	.-210    	; 0x51e <LCD_BackLightOn>
 5f0:	8c e0       	ldi	r24, 0x0C	; 12
 5f2:	9b cf       	rjmp	.-202    	; 0x52a <LCD_WriteCommand>
 5f4:	08 95       	ret

000005f6 <LCD_WriteData>:
 5f6:	cf 93       	push	r28
 5f8:	c8 2f       	mov	r28, r24
 5fa:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 5fe:	61 60       	ori	r22, 0x01	; 1
 600:	6f 70       	andi	r22, 0x0F	; 15
 602:	80 7f       	andi	r24, 0xF0	; 240
 604:	68 2b       	or	r22, r24
 606:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 60a:	87 e2       	ldi	r24, 0x27	; 39
 60c:	0f df       	rcall	.-482    	; 0x42c <I2C_TxByte>
 60e:	6c df       	rcall	.-296    	; 0x4e8 <LCD_pulse_enable>
 610:	60 91 dc 01 	lds	r22, 0x01DC	; 0x8001dc <__data_end>
 614:	6f 70       	andi	r22, 0x0F	; 15
 616:	20 e1       	ldi	r18, 0x10	; 16
 618:	c2 9f       	mul	r28, r18
 61a:	c0 01       	movw	r24, r0
 61c:	11 24       	eor	r1, r1
 61e:	68 2b       	or	r22, r24
 620:	60 93 dc 01 	sts	0x01DC, r22	; 0x8001dc <__data_end>
 624:	87 e2       	ldi	r24, 0x27	; 39
 626:	02 df       	rcall	.-508    	; 0x42c <I2C_TxByte>
 628:	5f df       	rcall	.-322    	; 0x4e8 <LCD_pulse_enable>
 62a:	cf 91       	pop	r28
 62c:	08 95       	ret

0000062e <LCD_write_string>:
 62e:	0f 93       	push	r16
 630:	1f 93       	push	r17
 632:	cf 93       	push	r28
 634:	fc 01       	movw	r30, r24
 636:	80 81       	ld	r24, Z
 638:	88 23       	and	r24, r24
 63a:	51 f0       	breq	.+20     	; 0x650 <LCD_write_string+0x22>
 63c:	8f 01       	movw	r16, r30
 63e:	c0 e0       	ldi	r28, 0x00	; 0
 640:	da df       	rcall	.-76     	; 0x5f6 <LCD_WriteData>
 642:	cf 5f       	subi	r28, 0xFF	; 255
 644:	f8 01       	movw	r30, r16
 646:	ec 0f       	add	r30, r28
 648:	f1 1d       	adc	r31, r1
 64a:	80 81       	ld	r24, Z
 64c:	c8 17       	cp	r28, r24
 64e:	c0 f3       	brcs	.-16     	; 0x640 <LCD_write_string+0x12>
 650:	cf 91       	pop	r28
 652:	1f 91       	pop	r17
 654:	0f 91       	pop	r16
 656:	08 95       	ret

00000658 <Get_WasherMode>:
{
	return WasherTime;
}
void Set_WasherTime(uint8_t Time)
{
	WasherTime = Time;
 658:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
 65c:	08 95       	ret

0000065e <Set_WasherMode>:
 65e:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <WasherMode>
 662:	08 95       	ret

00000664 <Get_WasherPower>:
 664:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <WasherPower>
 668:	08 95       	ret

0000066a <Set_WasherPower>:
 66a:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <WasherPower>
 66e:	08 95       	ret

00000670 <Get_Minu>:
}
uint8_t Get_Minu()
{
	return minu;
}
 670:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <minu>
 674:	08 95       	ret

00000676 <Set_Minu>:
void Set_Minu(uint8_t m)
{
	minu = m;
 676:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <minu>
 67a:	08 95       	ret

0000067c <Get_Sec>:
}
uint8_t Get_Sec()
{
	return sec;
}
 67c:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <sec>
 680:	08 95       	ret

00000682 <Set_Sec>:
void Set_Sec(uint8_t s)
{
	sec = s;
 682:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <sec>
 686:	08 95       	ret

00000688 <Level_Display>:
}
char* Level_Display(uint8_t level)
{
	switch(level)
 688:	81 30       	cpi	r24, 0x01	; 1
 68a:	21 f0       	breq	.+8      	; 0x694 <Level_Display+0xc>
 68c:	38 f0       	brcs	.+14     	; 0x69c <Level_Display+0x14>
 68e:	82 30       	cpi	r24, 0x02	; 2
 690:	41 f0       	breq	.+16     	; 0x6a2 <Level_Display+0x1a>
 692:	03 c0       	rjmp	.+6      	; 0x69a <Level_Display+0x12>
	{
		case POWER_LV1:
		return lv1;
	
		case POWER_LV2:
		return lv2;
 694:	29 e0       	ldi	r18, 0x09	; 9
 696:	31 e0       	ldi	r19, 0x01	; 1
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <Level_Display+0x1e>
		
		case POWER_LV3:
		return lv3;
		
	}
}
 69a:	08 95       	ret
char* Level_Display(uint8_t level)
{
	switch(level)
	{
		case POWER_LV1:
		return lv1;
 69c:	2e e0       	ldi	r18, 0x0E	; 14
 69e:	31 e0       	ldi	r19, 0x01	; 1
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <Level_Display+0x1e>
	
		case POWER_LV2:
		return lv2;
		
		case POWER_LV3:
		return lv3;
 6a2:	24 e0       	ldi	r18, 0x04	; 4
 6a4:	31 e0       	ldi	r19, 0x01	; 1
 6a6:	82 2f       	mov	r24, r18
 6a8:	93 2f       	mov	r25, r19
		
	}
}
 6aa:	08 95       	ret

000006ac <main>:

int main(void)
{
 6ac:	cf 93       	push	r28
 6ae:	df 93       	push	r29
 6b0:	cd b7       	in	r28, 0x3d	; 61
 6b2:	de b7       	in	r29, 0x3e	; 62
 6b4:	64 97       	sbiw	r28, 0x14	; 20
 6b6:	0f b6       	in	r0, 0x3f	; 63
 6b8:	f8 94       	cli
 6ba:	de bf       	out	0x3e, r29	; 62
 6bc:	0f be       	out	0x3f, r0	; 63
 6be:	cd bf       	out	0x3d, r28	; 61
	Button_Init();
 6c0:	0a dd       	rcall	.-1516   	; 0xd6 <Button_Init>
	DS3231_Init();
 6c2:	51 de       	rcall	.-862    	; 0x366 <DS3231_Init>
	LED_Init();
 6c4:	4a dd       	rcall	.-1388   	; 0x15a <LED_Init>
	LCD_Init();
 6c6:	6a df       	rcall	.-300    	; 0x59c <LCD_Init>
 6c8:	65 dd       	rcall	.-1334   	; 0x194 <Motor_Init>
	Motor_Init();
 6ca:	e8 ee       	ldi	r30, 0xE8	; 232
 6cc:	f1 e0       	ldi	r31, 0x01	; 1
	
	setTime.sec = 0;
 6ce:	10 82       	st	Z, r1
 6d0:	11 82       	std	Z+1, r1	; 0x01
 6d2:	fe 01       	movw	r30, r28
	setTime.minu = 0;
 6d4:	31 96       	adiw	r30, 0x01	; 1
	
	char buff[20] = {0};
 6d6:	84 e1       	ldi	r24, 0x14	; 20
 6d8:	df 01       	movw	r26, r30
 6da:	1d 92       	st	X+, r1
 6dc:	8a 95       	dec	r24
 6de:	e9 f7       	brne	.-6      	; 0x6da <main+0x2e>
 6e0:	6f 01       	movw	r12, r30
 6e2:	0f 2e       	mov	r0, r31
		{
			Mode_State_Button();
			OFF_LED();
			
			LCD_goto_XY(0,0);
			sprintf(buff,"Mode: REDEY    ");
 6e4:	f3 e2       	ldi	r31, 0x23	; 35
			LCD_write_string(buff);
			
			DS3231_GetTimeDate(&curTime);
			LCD_goto_XY(1,0);
			sprintf(buff,"%02d%02d%02d-%02d:%02d:%02d",
 6e6:	ef 2e       	mov	r14, r31
 6e8:	f1 e0       	ldi	r31, 0x01	; 1
 6ea:	ff 2e       	mov	r15, r31
 6ec:	f0 2d       	mov	r31, r0
 6ee:	0f 2e       	mov	r0, r31
 6f0:	f0 e9       	ldi	r31, 0x90	; 144
			
			LCD_goto_XY(0,0);
			sprintf(buff,"Mode: SET MINU ");
			LCD_write_string(buff);
			LCD_goto_XY(1,0);
			sprintf(buff,"%s, %02d:%02d",Level_Display(WasherPower), Get_Minu(), Get_Sec());
 6f2:	af 2e       	mov	r10, r31
 6f4:	f1 e0       	ldi	r31, 0x01	; 1
 6f6:	bf 2e       	mov	r11, r31
 6f8:	f0 2d       	mov	r31, r0
 6fa:	0e 2f       	mov	r16, r30
 6fc:	1d 2d       	mov	r17, r13
		{
			Mode_State_Button();
			OFF_LED();
			
			LCD_goto_XY(0,0);
			sprintf(buff,"Mode: REDEY    ");
 6fe:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
	char buff[20] = {0};
	char lv[3] = {0};
		
    while (1) 
    {
		if(WasherMode == REDEY)
 702:	81 11       	cpse	r24, r1
 704:	38 c0       	rjmp	.+112    	; 0x776 <main+0xca>
		{
			Mode_State_Button();
 706:	5d dd       	rcall	.-1350   	; 0x1c2 <Mode_State_Button>
 708:	2c dd       	rcall	.-1448   	; 0x162 <OFF_LED>
			OFF_LED();
 70a:	60 e0       	ldi	r22, 0x00	; 0
 70c:	80 e0       	ldi	r24, 0x00	; 0
			
			LCD_goto_XY(0,0);
 70e:	31 df       	rcall	.-414    	; 0x572 <LCD_goto_XY>
 710:	80 e1       	ldi	r24, 0x10	; 16
 712:	e3 e1       	ldi	r30, 0x13	; 19
 714:	f1 e0       	ldi	r31, 0x01	; 1
			sprintf(buff,"Mode: REDEY    ");
 716:	a0 2f       	mov	r26, r16
 718:	b1 2f       	mov	r27, r17
 71a:	01 90       	ld	r0, Z+
 71c:	0d 92       	st	X+, r0
 71e:	8a 95       	dec	r24
 720:	e1 f7       	brne	.-8      	; 0x71a <main+0x6e>
 722:	80 2f       	mov	r24, r16
			LCD_write_string(buff);
 724:	91 2f       	mov	r25, r17
 726:	83 df       	rcall	.-250    	; 0x62e <LCD_write_string>
 728:	81 ee       	ldi	r24, 0xE1	; 225
			
			DS3231_GetTimeDate(&curTime);
 72a:	91 e0       	ldi	r25, 0x01	; 1
 72c:	1e de       	rcall	.-964    	; 0x36a <DS3231_GetTimeDate>
 72e:	60 e0       	ldi	r22, 0x00	; 0
 730:	81 e0       	ldi	r24, 0x01	; 1
			LCD_goto_XY(1,0);
 732:	1f df       	rcall	.-450    	; 0x572 <LCD_goto_XY>
 734:	e1 ee       	ldi	r30, 0xE1	; 225
 736:	f1 e0       	ldi	r31, 0x01	; 1
 738:	80 81       	ld	r24, Z
			sprintf(buff,"%02d%02d%02d-%02d:%02d:%02d",
			curTime.year, curTime.month, curTime.date, curTime.hour, curTime.minu, curTime.sec);
 73a:	1f 92       	push	r1
 73c:	8f 93       	push	r24
			sprintf(buff,"Mode: REDEY    ");
			LCD_write_string(buff);
			
			DS3231_GetTimeDate(&curTime);
			LCD_goto_XY(1,0);
			sprintf(buff,"%02d%02d%02d-%02d:%02d:%02d",
 73e:	81 81       	ldd	r24, Z+1	; 0x01
 740:	1f 92       	push	r1
 742:	8f 93       	push	r24
 744:	82 81       	ldd	r24, Z+2	; 0x02
 746:	1f 92       	push	r1
 748:	8f 93       	push	r24
 74a:	84 81       	ldd	r24, Z+4	; 0x04
 74c:	1f 92       	push	r1
 74e:	8f 93       	push	r24
 750:	85 81       	ldd	r24, Z+5	; 0x05
 752:	1f 92       	push	r1
 754:	8f 93       	push	r24
 756:	86 81       	ldd	r24, Z+6	; 0x06
 758:	1f 92       	push	r1
 75a:	8f 93       	push	r24
 75c:	ff 92       	push	r15
 75e:	ef 92       	push	r14
 760:	df 92       	push	r13
 762:	cf 92       	push	r12
 764:	0e d1       	rcall	.+540    	; 0x982 <sprintf>
 766:	80 2f       	mov	r24, r16
 768:	91 2f       	mov	r25, r17
			curTime.year, curTime.month, curTime.date, curTime.hour, curTime.minu, curTime.sec);
			LCD_write_string(buff);
 76a:	61 df       	rcall	.-318    	; 0x62e <LCD_write_string>
 76c:	0f b6       	in	r0, 0x3f	; 63
 76e:	f8 94       	cli
 770:	de bf       	out	0x3e, r29	; 62
 772:	0f be       	out	0x3f, r0	; 63
 774:	cd bf       	out	0x3d, r28	; 61
 776:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
		}
		if(WasherMode == POWER_SET)
 77a:	81 30       	cpi	r24, 0x01	; 1
 77c:	09 f0       	breq	.+2      	; 0x780 <main+0xd4>
 77e:	4e c0       	rjmp	.+156    	; 0x81c <main+0x170>
		{
			Mode_State_Button();
 780:	20 dd       	rcall	.-1472   	; 0x1c2 <Mode_State_Button>
			Stop_state_Button();
 782:	7a dd       	rcall	.-1292   	; 0x278 <Stop_state_Button>
 784:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <WasherPower>
			
			switch(WasherPower)
 788:	81 30       	cpi	r24, 0x01	; 1
 78a:	b1 f0       	breq	.+44     	; 0x7b8 <main+0x10c>
 78c:	18 f0       	brcs	.+6      	; 0x794 <main+0xe8>
 78e:	82 30       	cpi	r24, 0x02	; 2
 790:	29 f1       	breq	.+74     	; 0x7dc <main+0x130>
 792:	35 c0       	rjmp	.+106    	; 0x7fe <main+0x152>
 794:	3f dd       	rcall	.-1410   	; 0x214 <Power_state_Button>
			{
				case POWER_LV1:
				Power_state_Button();
 796:	60 e0       	ldi	r22, 0x00	; 0
				LCD_goto_XY(0,0);
 798:	80 e0       	ldi	r24, 0x00	; 0
 79a:	eb de       	rcall	.-554    	; 0x572 <LCD_goto_XY>
 79c:	80 e1       	ldi	r24, 0x10	; 16
				sprintf(buff,"Mode: POWER LV1");
 79e:	ef e3       	ldi	r30, 0x3F	; 63
 7a0:	f1 e0       	ldi	r31, 0x01	; 1
 7a2:	a0 2f       	mov	r26, r16
 7a4:	b1 2f       	mov	r27, r17
 7a6:	01 90       	ld	r0, Z+
 7a8:	0d 92       	st	X+, r0
 7aa:	8a 95       	dec	r24
 7ac:	e1 f7       	brne	.-8      	; 0x7a6 <main+0xfa>
				LCD_write_string(buff);
 7ae:	80 2f       	mov	r24, r16
 7b0:	91 2f       	mov	r25, r17
 7b2:	3d df       	rcall	.-390    	; 0x62e <LCD_write_string>
				On_LED_7();
 7b4:	da dc       	rcall	.-1612   	; 0x16a <On_LED_7>
				break;
				
				case  POWER_LV2:
				Power_state_Button();
 7b6:	23 c0       	rjmp	.+70     	; 0x7fe <main+0x152>
 7b8:	2d dd       	rcall	.-1446   	; 0x214 <Power_state_Button>
				LCD_goto_XY(0,0);
 7ba:	60 e0       	ldi	r22, 0x00	; 0
 7bc:	80 e0       	ldi	r24, 0x00	; 0
 7be:	d9 de       	rcall	.-590    	; 0x572 <LCD_goto_XY>
				sprintf(buff,"Mode: POWER LV2");
 7c0:	80 e1       	ldi	r24, 0x10	; 16
 7c2:	ef e4       	ldi	r30, 0x4F	; 79
 7c4:	f1 e0       	ldi	r31, 0x01	; 1
 7c6:	a0 2f       	mov	r26, r16
 7c8:	b1 2f       	mov	r27, r17
 7ca:	01 90       	ld	r0, Z+
 7cc:	0d 92       	st	X+, r0
 7ce:	8a 95       	dec	r24
				LCD_write_string(buff);
 7d0:	e1 f7       	brne	.-8      	; 0x7ca <main+0x11e>
 7d2:	80 2f       	mov	r24, r16
 7d4:	91 2f       	mov	r25, r17
				On_LED_0011();
 7d6:	2b df       	rcall	.-426    	; 0x62e <LCD_write_string>
 7d8:	cd dc       	rcall	.-1638   	; 0x174 <On_LED_0011>
				break;
 7da:	11 c0       	rjmp	.+34     	; 0x7fe <main+0x152>
				
				case POWER_LV3:
				Power_state_Button();
 7dc:	1b dd       	rcall	.-1482   	; 0x214 <Power_state_Button>
 7de:	60 e0       	ldi	r22, 0x00	; 0
				LCD_goto_XY(0,0);
 7e0:	80 e0       	ldi	r24, 0x00	; 0
 7e2:	c7 de       	rcall	.-626    	; 0x572 <LCD_goto_XY>
 7e4:	80 e1       	ldi	r24, 0x10	; 16
 7e6:	ef e5       	ldi	r30, 0x5F	; 95
				sprintf(buff,"Mode: POWER LV3");
 7e8:	f1 e0       	ldi	r31, 0x01	; 1
 7ea:	a0 2f       	mov	r26, r16
 7ec:	b1 2f       	mov	r27, r17
 7ee:	01 90       	ld	r0, Z+
 7f0:	0d 92       	st	X+, r0
 7f2:	8a 95       	dec	r24
 7f4:	e1 f7       	brne	.-8      	; 0x7ee <main+0x142>
				LCD_write_string(buff);
 7f6:	80 2f       	mov	r24, r16
 7f8:	91 2f       	mov	r25, r17
 7fa:	19 df       	rcall	.-462    	; 0x62e <LCD_write_string>
				On_LED_0111();
 7fc:	c2 dc       	rcall	.-1660   	; 0x182 <On_LED_0111>
				break;
			}
			LCD_goto_XY(1,0);
 7fe:	60 e0       	ldi	r22, 0x00	; 0
 800:	81 e0       	ldi	r24, 0x01	; 1
 802:	b7 de       	rcall	.-658    	; 0x572 <LCD_goto_XY>
 804:	81 e1       	ldi	r24, 0x11	; 17
			sprintf(buff,"                ");
 806:	ef e6       	ldi	r30, 0x6F	; 111
 808:	f1 e0       	ldi	r31, 0x01	; 1
 80a:	a0 2f       	mov	r26, r16
 80c:	b1 2f       	mov	r27, r17
 80e:	01 90       	ld	r0, Z+
 810:	0d 92       	st	X+, r0
 812:	8a 95       	dec	r24
 814:	e1 f7       	brne	.-8      	; 0x80e <main+0x162>
			LCD_write_string(buff);
 816:	80 2f       	mov	r24, r16
 818:	91 2f       	mov	r25, r17
 81a:	09 df       	rcall	.-494    	; 0x62e <LCD_write_string>
		}
		if(WasherMode == MINU_SET)
 81c:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
 820:	82 30       	cpi	r24, 0x02	; 2
		{
			Mode_State_Button();
 822:	89 f5       	brne	.+98     	; 0x886 <main+0x1da>
 824:	ce dc       	rcall	.-1636   	; 0x1c2 <Mode_State_Button>
			Stop_state_Button();
 826:	28 dd       	rcall	.-1456   	; 0x278 <Stop_state_Button>
 828:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <minu>
			Minu_state_Button(minu);
 82c:	53 dd       	rcall	.-1370   	; 0x2d4 <Minu_state_Button>
 82e:	60 e0       	ldi	r22, 0x00	; 0
 830:	80 e0       	ldi	r24, 0x00	; 0
			
			LCD_goto_XY(0,0);
 832:	9f de       	rcall	.-706    	; 0x572 <LCD_goto_XY>
 834:	80 e1       	ldi	r24, 0x10	; 16
 836:	e0 e8       	ldi	r30, 0x80	; 128
			sprintf(buff,"Mode: SET MINU ");
 838:	f1 e0       	ldi	r31, 0x01	; 1
 83a:	a0 2f       	mov	r26, r16
 83c:	b1 2f       	mov	r27, r17
 83e:	01 90       	ld	r0, Z+
 840:	0d 92       	st	X+, r0
 842:	8a 95       	dec	r24
 844:	e1 f7       	brne	.-8      	; 0x83e <main+0x192>
 846:	80 2f       	mov	r24, r16
			LCD_write_string(buff);
 848:	91 2f       	mov	r25, r17
 84a:	f1 de       	rcall	.-542    	; 0x62e <LCD_write_string>
 84c:	60 e0       	ldi	r22, 0x00	; 0
			LCD_goto_XY(1,0);
 84e:	81 e0       	ldi	r24, 0x01	; 1
 850:	90 de       	rcall	.-736    	; 0x572 <LCD_goto_XY>
 852:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <WasherPower>
			sprintf(buff,"%s, %02d:%02d",Level_Display(WasherPower), Get_Minu(), Get_Sec());
 856:	18 df       	rcall	.-464    	; 0x688 <Level_Display>
 858:	20 91 dd 01 	lds	r18, 0x01DD	; 0x8001dd <sec>
 85c:	1f 92       	push	r1
 85e:	2f 93       	push	r18
 860:	20 91 de 01 	lds	r18, 0x01DE	; 0x8001de <minu>
 864:	1f 92       	push	r1
 866:	2f 93       	push	r18
 868:	9f 93       	push	r25
 86a:	8f 93       	push	r24
 86c:	bf 92       	push	r11
 86e:	af 92       	push	r10
 870:	df 92       	push	r13
 872:	cf 92       	push	r12
 874:	86 d0       	rcall	.+268    	; 0x982 <sprintf>
			LCD_write_string(buff);
 876:	80 2f       	mov	r24, r16
 878:	91 2f       	mov	r25, r17
 87a:	d9 de       	rcall	.-590    	; 0x62e <LCD_write_string>
 87c:	0f b6       	in	r0, 0x3f	; 63
 87e:	f8 94       	cli
 880:	de bf       	out	0x3e, r29	; 62
 882:	0f be       	out	0x3f, r0	; 63
 884:	cd bf       	out	0x3d, r28	; 61
		}
		if(WasherMode == SEC_SET)		
 886:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
 88a:	83 30       	cpi	r24, 0x03	; 3
 88c:	89 f5       	brne	.+98     	; 0x8f0 <main+0x244>
		{
			Mode_State_Button();
 88e:	99 dc       	rcall	.-1742   	; 0x1c2 <Mode_State_Button>
 890:	f3 dc       	rcall	.-1562   	; 0x278 <Stop_state_Button>
			Stop_state_Button();
 892:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <sec>
			Sec_state_Button(sec);
 896:	3d dd       	rcall	.-1414   	; 0x312 <Sec_state_Button>
 898:	60 e0       	ldi	r22, 0x00	; 0
			
			LCD_goto_XY(0,0);
 89a:	80 e0       	ldi	r24, 0x00	; 0
 89c:	6a de       	rcall	.-812    	; 0x572 <LCD_goto_XY>
 89e:	80 e1       	ldi	r24, 0x10	; 16
 8a0:	ee e9       	ldi	r30, 0x9E	; 158
			sprintf(buff,"Mode: SET SEC  ");
 8a2:	f1 e0       	ldi	r31, 0x01	; 1
 8a4:	a0 2f       	mov	r26, r16
 8a6:	b1 2f       	mov	r27, r17
 8a8:	01 90       	ld	r0, Z+
 8aa:	0d 92       	st	X+, r0
 8ac:	8a 95       	dec	r24
 8ae:	e1 f7       	brne	.-8      	; 0x8a8 <main+0x1fc>
			LCD_write_string(buff);
 8b0:	80 2f       	mov	r24, r16
 8b2:	91 2f       	mov	r25, r17
 8b4:	bc de       	rcall	.-648    	; 0x62e <LCD_write_string>
 8b6:	60 e0       	ldi	r22, 0x00	; 0
			LCD_goto_XY(1,0);
 8b8:	81 e0       	ldi	r24, 0x01	; 1
 8ba:	5b de       	rcall	.-842    	; 0x572 <LCD_goto_XY>
 8bc:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <WasherPower>
			sprintf(buff,"%s, %02d:%02d",Level_Display(WasherPower), Get_Minu(), Get_Sec());
 8c0:	e3 de       	rcall	.-570    	; 0x688 <Level_Display>
 8c2:	20 91 dd 01 	lds	r18, 0x01DD	; 0x8001dd <sec>
 8c6:	1f 92       	push	r1
 8c8:	2f 93       	push	r18
 8ca:	20 91 de 01 	lds	r18, 0x01DE	; 0x8001de <minu>
 8ce:	1f 92       	push	r1
 8d0:	2f 93       	push	r18
 8d2:	9f 93       	push	r25
 8d4:	8f 93       	push	r24
 8d6:	bf 92       	push	r11
 8d8:	af 92       	push	r10
 8da:	df 92       	push	r13
 8dc:	cf 92       	push	r12
			LCD_write_string(buff);	
 8de:	51 d0       	rcall	.+162    	; 0x982 <sprintf>
 8e0:	80 2f       	mov	r24, r16
 8e2:	91 2f       	mov	r25, r17
 8e4:	a4 de       	rcall	.-696    	; 0x62e <LCD_write_string>
 8e6:	0f b6       	in	r0, 0x3f	; 63
 8e8:	f8 94       	cli
 8ea:	de bf       	out	0x3e, r29	; 62
 8ec:	0f be       	out	0x3f, r0	; 63
		}
		if(WasherMode == RUN)
 8ee:	cd bf       	out	0x3d, r28	; 61
 8f0:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
		{
			Mode_State_Button();
 8f4:	84 30       	cpi	r24, 0x04	; 4
			Stop_state_Button();
 8f6:	89 f4       	brne	.+34     	; 0x91a <main+0x26e>
 8f8:	64 dc       	rcall	.-1848   	; 0x1c2 <Mode_State_Button>
			LCD_goto_XY(0,0);
 8fa:	be dc       	rcall	.-1668   	; 0x278 <Stop_state_Button>
 8fc:	60 e0       	ldi	r22, 0x00	; 0
 8fe:	80 e0       	ldi	r24, 0x00	; 0
 900:	38 de       	rcall	.-912    	; 0x572 <LCD_goto_XY>
			sprintf(buff,"Mode: RUN     ");
 902:	8f e0       	ldi	r24, 0x0F	; 15
 904:	ee ea       	ldi	r30, 0xAE	; 174
 906:	f1 e0       	ldi	r31, 0x01	; 1
 908:	a0 2f       	mov	r26, r16
 90a:	b1 2f       	mov	r27, r17
 90c:	01 90       	ld	r0, Z+
 90e:	0d 92       	st	X+, r0
 910:	8a 95       	dec	r24
			LCD_write_string(buff);
 912:	e1 f7       	brne	.-8      	; 0x90c <main+0x260>
 914:	80 2f       	mov	r24, r16
 916:	91 2f       	mov	r25, r17
 918:	8a de       	rcall	.-748    	; 0x62e <LCD_write_string>
		}
		if(WasherMode == STOP)
 91a:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
 91e:	85 30       	cpi	r24, 0x05	; 5
 920:	91 f4       	brne	.+36     	; 0x946 <main+0x29a>
		{
			Mode_State_Button();
 922:	4f dc       	rcall	.-1890   	; 0x1c2 <Mode_State_Button>
 924:	a9 dc       	rcall	.-1710   	; 0x278 <Stop_state_Button>
			Stop_state_Button();
 926:	1d dc       	rcall	.-1990   	; 0x162 <OFF_LED>
 928:	60 e0       	ldi	r22, 0x00	; 0
			OFF_LED();
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	22 de       	rcall	.-956    	; 0x572 <LCD_goto_XY>
			LCD_goto_XY(0,0);
 92e:	8f e0       	ldi	r24, 0x0F	; 15
 930:	ed eb       	ldi	r30, 0xBD	; 189
 932:	f1 e0       	ldi	r31, 0x01	; 1
 934:	a0 2f       	mov	r26, r16
			sprintf(buff,"Mode: STOP    ");
 936:	b1 2f       	mov	r27, r17
 938:	01 90       	ld	r0, Z+
 93a:	0d 92       	st	X+, r0
 93c:	8a 95       	dec	r24
 93e:	e1 f7       	brne	.-8      	; 0x938 <main+0x28c>
 940:	80 2f       	mov	r24, r16
 942:	91 2f       	mov	r25, r17
 944:	74 de       	rcall	.-792    	; 0x62e <LCD_write_string>
 946:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <WasherMode>
			LCD_write_string(buff);
 94a:	86 30       	cpi	r24, 0x06	; 6
 94c:	09 f0       	breq	.+2      	; 0x950 <main+0x2a4>
 94e:	d7 ce       	rjmp	.-594    	; 0x6fe <main+0x52>
		}
		if(WasherMode == END)
 950:	38 dc       	rcall	.-1936   	; 0x1c2 <Mode_State_Button>
 952:	92 dc       	rcall	.-1756   	; 0x278 <Stop_state_Button>
 954:	1b dc       	rcall	.-1994   	; 0x18c <On_LED_1111>
 956:	8f e0       	ldi	r24, 0x0F	; 15
 958:	ec ec       	ldi	r30, 0xCC	; 204
		{
			Mode_State_Button();
 95a:	f1 e0       	ldi	r31, 0x01	; 1
 95c:	a0 2f       	mov	r26, r16
			Stop_state_Button();
 95e:	b1 2f       	mov	r27, r17
 960:	01 90       	ld	r0, Z+
			On_LED_1111();
 962:	0d 92       	st	X+, r0
 964:	8a 95       	dec	r24
			sprintf(buff,"Mode: END     ");
 966:	e1 f7       	brne	.-8      	; 0x960 <main+0x2b4>
 968:	80 2f       	mov	r24, r16
 96a:	91 2f       	mov	r25, r17
 96c:	60 de       	rcall	.-832    	; 0x62e <LCD_write_string>
 96e:	c7 ce       	rjmp	.-626    	; 0x6fe <main+0x52>

00000970 <__tablejump2__>:
 970:	ee 0f       	add	r30, r30
 972:	ff 1f       	adc	r31, r31
 974:	00 24       	eor	r0, r0
 976:	00 1c       	adc	r0, r0
			LCD_write_string(buff);
 978:	0b be       	out	0x3b, r0	; 59
 97a:	07 90       	elpm	r0, Z+
 97c:	f6 91       	elpm	r31, Z
 97e:	e0 2d       	mov	r30, r0
 980:	09 94       	ijmp

00000982 <sprintf>:
 982:	0f 93       	push	r16
 984:	1f 93       	push	r17
 986:	cf 93       	push	r28
 988:	df 93       	push	r29
 98a:	cd b7       	in	r28, 0x3d	; 61
 98c:	de b7       	in	r29, 0x3e	; 62
 98e:	2e 97       	sbiw	r28, 0x0e	; 14
 990:	0f b6       	in	r0, 0x3f	; 63
 992:	f8 94       	cli
 994:	de bf       	out	0x3e, r29	; 62
 996:	0f be       	out	0x3f, r0	; 63
 998:	cd bf       	out	0x3d, r28	; 61
 99a:	0d 89       	ldd	r16, Y+21	; 0x15
 99c:	1e 89       	ldd	r17, Y+22	; 0x16
 99e:	86 e0       	ldi	r24, 0x06	; 6
 9a0:	8c 83       	std	Y+4, r24	; 0x04
 9a2:	1a 83       	std	Y+2, r17	; 0x02
 9a4:	09 83       	std	Y+1, r16	; 0x01
 9a6:	8f ef       	ldi	r24, 0xFF	; 255
 9a8:	9f e7       	ldi	r25, 0x7F	; 127
 9aa:	9e 83       	std	Y+6, r25	; 0x06
 9ac:	8d 83       	std	Y+5, r24	; 0x05
 9ae:	ae 01       	movw	r20, r28
 9b0:	47 5e       	subi	r20, 0xE7	; 231
 9b2:	5f 4f       	sbci	r21, 0xFF	; 255
 9b4:	6f 89       	ldd	r22, Y+23	; 0x17
 9b6:	78 8d       	ldd	r23, Y+24	; 0x18
 9b8:	ce 01       	movw	r24, r28
 9ba:	01 96       	adiw	r24, 0x01	; 1
 9bc:	10 d0       	rcall	.+32     	; 0x9de <vfprintf>
 9be:	ef 81       	ldd	r30, Y+7	; 0x07
 9c0:	f8 85       	ldd	r31, Y+8	; 0x08
 9c2:	e0 0f       	add	r30, r16
 9c4:	f1 1f       	adc	r31, r17
 9c6:	10 82       	st	Z, r1
 9c8:	2e 96       	adiw	r28, 0x0e	; 14
 9ca:	0f b6       	in	r0, 0x3f	; 63
 9cc:	f8 94       	cli
 9ce:	de bf       	out	0x3e, r29	; 62
 9d0:	0f be       	out	0x3f, r0	; 63
 9d2:	cd bf       	out	0x3d, r28	; 61
 9d4:	df 91       	pop	r29
 9d6:	cf 91       	pop	r28
 9d8:	1f 91       	pop	r17
 9da:	0f 91       	pop	r16
 9dc:	08 95       	ret

000009de <vfprintf>:
 9de:	2f 92       	push	r2
 9e0:	3f 92       	push	r3
 9e2:	4f 92       	push	r4
 9e4:	5f 92       	push	r5
 9e6:	6f 92       	push	r6
 9e8:	7f 92       	push	r7
 9ea:	8f 92       	push	r8
 9ec:	9f 92       	push	r9
 9ee:	af 92       	push	r10
 9f0:	bf 92       	push	r11
 9f2:	cf 92       	push	r12
 9f4:	df 92       	push	r13
 9f6:	ef 92       	push	r14
 9f8:	ff 92       	push	r15
 9fa:	0f 93       	push	r16
 9fc:	1f 93       	push	r17
 9fe:	cf 93       	push	r28
 a00:	df 93       	push	r29
 a02:	cd b7       	in	r28, 0x3d	; 61
 a04:	de b7       	in	r29, 0x3e	; 62
 a06:	2b 97       	sbiw	r28, 0x0b	; 11
 a08:	0f b6       	in	r0, 0x3f	; 63
 a0a:	f8 94       	cli
 a0c:	de bf       	out	0x3e, r29	; 62
 a0e:	0f be       	out	0x3f, r0	; 63
 a10:	cd bf       	out	0x3d, r28	; 61
 a12:	6c 01       	movw	r12, r24
 a14:	7b 01       	movw	r14, r22
 a16:	8a 01       	movw	r16, r20
 a18:	fc 01       	movw	r30, r24
 a1a:	17 82       	std	Z+7, r1	; 0x07
 a1c:	16 82       	std	Z+6, r1	; 0x06
 a1e:	83 81       	ldd	r24, Z+3	; 0x03
 a20:	81 ff       	sbrs	r24, 1
 a22:	bf c1       	rjmp	.+894    	; 0xda2 <vfprintf+0x3c4>
 a24:	ce 01       	movw	r24, r28
 a26:	01 96       	adiw	r24, 0x01	; 1
 a28:	3c 01       	movw	r6, r24
 a2a:	f6 01       	movw	r30, r12
 a2c:	93 81       	ldd	r25, Z+3	; 0x03
 a2e:	f7 01       	movw	r30, r14
 a30:	93 fd       	sbrc	r25, 3
 a32:	85 91       	lpm	r24, Z+
 a34:	93 ff       	sbrs	r25, 3
 a36:	81 91       	ld	r24, Z+
 a38:	7f 01       	movw	r14, r30
 a3a:	88 23       	and	r24, r24
 a3c:	09 f4       	brne	.+2      	; 0xa40 <vfprintf+0x62>
 a3e:	ad c1       	rjmp	.+858    	; 0xd9a <vfprintf+0x3bc>
 a40:	85 32       	cpi	r24, 0x25	; 37
 a42:	39 f4       	brne	.+14     	; 0xa52 <vfprintf+0x74>
 a44:	93 fd       	sbrc	r25, 3
 a46:	85 91       	lpm	r24, Z+
 a48:	93 ff       	sbrs	r25, 3
 a4a:	81 91       	ld	r24, Z+
 a4c:	7f 01       	movw	r14, r30
 a4e:	85 32       	cpi	r24, 0x25	; 37
 a50:	21 f4       	brne	.+8      	; 0xa5a <vfprintf+0x7c>
 a52:	b6 01       	movw	r22, r12
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	d6 d1       	rcall	.+940    	; 0xe04 <fputc>
 a58:	e8 cf       	rjmp	.-48     	; 0xa2a <vfprintf+0x4c>
 a5a:	91 2c       	mov	r9, r1
 a5c:	21 2c       	mov	r2, r1
 a5e:	31 2c       	mov	r3, r1
 a60:	ff e1       	ldi	r31, 0x1F	; 31
 a62:	f3 15       	cp	r31, r3
 a64:	d8 f0       	brcs	.+54     	; 0xa9c <vfprintf+0xbe>
 a66:	8b 32       	cpi	r24, 0x2B	; 43
 a68:	79 f0       	breq	.+30     	; 0xa88 <vfprintf+0xaa>
 a6a:	38 f4       	brcc	.+14     	; 0xa7a <vfprintf+0x9c>
 a6c:	80 32       	cpi	r24, 0x20	; 32
 a6e:	79 f0       	breq	.+30     	; 0xa8e <vfprintf+0xb0>
 a70:	83 32       	cpi	r24, 0x23	; 35
 a72:	a1 f4       	brne	.+40     	; 0xa9c <vfprintf+0xbe>
 a74:	23 2d       	mov	r18, r3
 a76:	20 61       	ori	r18, 0x10	; 16
 a78:	1d c0       	rjmp	.+58     	; 0xab4 <vfprintf+0xd6>
 a7a:	8d 32       	cpi	r24, 0x2D	; 45
 a7c:	61 f0       	breq	.+24     	; 0xa96 <vfprintf+0xb8>
 a7e:	80 33       	cpi	r24, 0x30	; 48
 a80:	69 f4       	brne	.+26     	; 0xa9c <vfprintf+0xbe>
 a82:	23 2d       	mov	r18, r3
 a84:	21 60       	ori	r18, 0x01	; 1
 a86:	16 c0       	rjmp	.+44     	; 0xab4 <vfprintf+0xd6>
 a88:	83 2d       	mov	r24, r3
 a8a:	82 60       	ori	r24, 0x02	; 2
 a8c:	38 2e       	mov	r3, r24
 a8e:	e3 2d       	mov	r30, r3
 a90:	e4 60       	ori	r30, 0x04	; 4
 a92:	3e 2e       	mov	r3, r30
 a94:	2a c0       	rjmp	.+84     	; 0xaea <vfprintf+0x10c>
 a96:	f3 2d       	mov	r31, r3
 a98:	f8 60       	ori	r31, 0x08	; 8
 a9a:	1d c0       	rjmp	.+58     	; 0xad6 <vfprintf+0xf8>
 a9c:	37 fc       	sbrc	r3, 7
 a9e:	2d c0       	rjmp	.+90     	; 0xafa <vfprintf+0x11c>
 aa0:	20 ed       	ldi	r18, 0xD0	; 208
 aa2:	28 0f       	add	r18, r24
 aa4:	2a 30       	cpi	r18, 0x0A	; 10
 aa6:	40 f0       	brcs	.+16     	; 0xab8 <vfprintf+0xda>
 aa8:	8e 32       	cpi	r24, 0x2E	; 46
 aaa:	b9 f4       	brne	.+46     	; 0xada <vfprintf+0xfc>
 aac:	36 fc       	sbrc	r3, 6
 aae:	75 c1       	rjmp	.+746    	; 0xd9a <vfprintf+0x3bc>
 ab0:	23 2d       	mov	r18, r3
 ab2:	20 64       	ori	r18, 0x40	; 64
 ab4:	32 2e       	mov	r3, r18
 ab6:	19 c0       	rjmp	.+50     	; 0xaea <vfprintf+0x10c>
 ab8:	36 fe       	sbrs	r3, 6
 aba:	06 c0       	rjmp	.+12     	; 0xac8 <vfprintf+0xea>
 abc:	8a e0       	ldi	r24, 0x0A	; 10
 abe:	98 9e       	mul	r9, r24
 ac0:	20 0d       	add	r18, r0
 ac2:	11 24       	eor	r1, r1
 ac4:	92 2e       	mov	r9, r18
 ac6:	11 c0       	rjmp	.+34     	; 0xaea <vfprintf+0x10c>
 ac8:	ea e0       	ldi	r30, 0x0A	; 10
 aca:	2e 9e       	mul	r2, r30
 acc:	20 0d       	add	r18, r0
 ace:	11 24       	eor	r1, r1
 ad0:	22 2e       	mov	r2, r18
 ad2:	f3 2d       	mov	r31, r3
 ad4:	f0 62       	ori	r31, 0x20	; 32
 ad6:	3f 2e       	mov	r3, r31
 ad8:	08 c0       	rjmp	.+16     	; 0xaea <vfprintf+0x10c>
 ada:	8c 36       	cpi	r24, 0x6C	; 108
 adc:	21 f4       	brne	.+8      	; 0xae6 <vfprintf+0x108>
 ade:	83 2d       	mov	r24, r3
 ae0:	80 68       	ori	r24, 0x80	; 128
 ae2:	38 2e       	mov	r3, r24
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <vfprintf+0x10c>
 ae6:	88 36       	cpi	r24, 0x68	; 104
 ae8:	41 f4       	brne	.+16     	; 0xafa <vfprintf+0x11c>
 aea:	f7 01       	movw	r30, r14
 aec:	93 fd       	sbrc	r25, 3
 aee:	85 91       	lpm	r24, Z+
 af0:	93 ff       	sbrs	r25, 3
 af2:	81 91       	ld	r24, Z+
 af4:	7f 01       	movw	r14, r30
 af6:	81 11       	cpse	r24, r1
 af8:	b3 cf       	rjmp	.-154    	; 0xa60 <vfprintf+0x82>
 afa:	98 2f       	mov	r25, r24
 afc:	9f 7d       	andi	r25, 0xDF	; 223
 afe:	95 54       	subi	r25, 0x45	; 69
 b00:	93 30       	cpi	r25, 0x03	; 3
 b02:	28 f4       	brcc	.+10     	; 0xb0e <vfprintf+0x130>
 b04:	0c 5f       	subi	r16, 0xFC	; 252
 b06:	1f 4f       	sbci	r17, 0xFF	; 255
 b08:	9f e3       	ldi	r25, 0x3F	; 63
 b0a:	99 83       	std	Y+1, r25	; 0x01
 b0c:	0d c0       	rjmp	.+26     	; 0xb28 <vfprintf+0x14a>
 b0e:	83 36       	cpi	r24, 0x63	; 99
 b10:	31 f0       	breq	.+12     	; 0xb1e <vfprintf+0x140>
 b12:	83 37       	cpi	r24, 0x73	; 115
 b14:	71 f0       	breq	.+28     	; 0xb32 <vfprintf+0x154>
 b16:	83 35       	cpi	r24, 0x53	; 83
 b18:	09 f0       	breq	.+2      	; 0xb1c <vfprintf+0x13e>
 b1a:	55 c0       	rjmp	.+170    	; 0xbc6 <vfprintf+0x1e8>
 b1c:	20 c0       	rjmp	.+64     	; 0xb5e <vfprintf+0x180>
 b1e:	f8 01       	movw	r30, r16
 b20:	80 81       	ld	r24, Z
 b22:	89 83       	std	Y+1, r24	; 0x01
 b24:	0e 5f       	subi	r16, 0xFE	; 254
 b26:	1f 4f       	sbci	r17, 0xFF	; 255
 b28:	88 24       	eor	r8, r8
 b2a:	83 94       	inc	r8
 b2c:	91 2c       	mov	r9, r1
 b2e:	53 01       	movw	r10, r6
 b30:	12 c0       	rjmp	.+36     	; 0xb56 <vfprintf+0x178>
 b32:	28 01       	movw	r4, r16
 b34:	f2 e0       	ldi	r31, 0x02	; 2
 b36:	4f 0e       	add	r4, r31
 b38:	51 1c       	adc	r5, r1
 b3a:	f8 01       	movw	r30, r16
 b3c:	a0 80       	ld	r10, Z
 b3e:	b1 80       	ldd	r11, Z+1	; 0x01
 b40:	36 fe       	sbrs	r3, 6
 b42:	03 c0       	rjmp	.+6      	; 0xb4a <vfprintf+0x16c>
 b44:	69 2d       	mov	r22, r9
 b46:	70 e0       	ldi	r23, 0x00	; 0
 b48:	02 c0       	rjmp	.+4      	; 0xb4e <vfprintf+0x170>
 b4a:	6f ef       	ldi	r22, 0xFF	; 255
 b4c:	7f ef       	ldi	r23, 0xFF	; 255
 b4e:	c5 01       	movw	r24, r10
 b50:	4e d1       	rcall	.+668    	; 0xdee <strnlen>
 b52:	4c 01       	movw	r8, r24
 b54:	82 01       	movw	r16, r4
 b56:	f3 2d       	mov	r31, r3
 b58:	ff 77       	andi	r31, 0x7F	; 127
 b5a:	3f 2e       	mov	r3, r31
 b5c:	15 c0       	rjmp	.+42     	; 0xb88 <vfprintf+0x1aa>
 b5e:	28 01       	movw	r4, r16
 b60:	22 e0       	ldi	r18, 0x02	; 2
 b62:	42 0e       	add	r4, r18
 b64:	51 1c       	adc	r5, r1
 b66:	f8 01       	movw	r30, r16
 b68:	a0 80       	ld	r10, Z
 b6a:	b1 80       	ldd	r11, Z+1	; 0x01
 b6c:	36 fe       	sbrs	r3, 6
 b6e:	03 c0       	rjmp	.+6      	; 0xb76 <vfprintf+0x198>
 b70:	69 2d       	mov	r22, r9
 b72:	70 e0       	ldi	r23, 0x00	; 0
 b74:	02 c0       	rjmp	.+4      	; 0xb7a <vfprintf+0x19c>
 b76:	6f ef       	ldi	r22, 0xFF	; 255
 b78:	7f ef       	ldi	r23, 0xFF	; 255
 b7a:	c5 01       	movw	r24, r10
 b7c:	2d d1       	rcall	.+602    	; 0xdd8 <strnlen_P>
 b7e:	4c 01       	movw	r8, r24
 b80:	f3 2d       	mov	r31, r3
 b82:	f0 68       	ori	r31, 0x80	; 128
 b84:	3f 2e       	mov	r3, r31
 b86:	82 01       	movw	r16, r4
 b88:	33 fc       	sbrc	r3, 3
 b8a:	19 c0       	rjmp	.+50     	; 0xbbe <vfprintf+0x1e0>
 b8c:	82 2d       	mov	r24, r2
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	88 16       	cp	r8, r24
 b92:	99 06       	cpc	r9, r25
 b94:	a0 f4       	brcc	.+40     	; 0xbbe <vfprintf+0x1e0>
 b96:	b6 01       	movw	r22, r12
 b98:	80 e2       	ldi	r24, 0x20	; 32
 b9a:	90 e0       	ldi	r25, 0x00	; 0
 b9c:	33 d1       	rcall	.+614    	; 0xe04 <fputc>
 b9e:	2a 94       	dec	r2
 ba0:	f5 cf       	rjmp	.-22     	; 0xb8c <vfprintf+0x1ae>
 ba2:	f5 01       	movw	r30, r10
 ba4:	37 fc       	sbrc	r3, 7
 ba6:	85 91       	lpm	r24, Z+
 ba8:	37 fe       	sbrs	r3, 7
 baa:	81 91       	ld	r24, Z+
 bac:	5f 01       	movw	r10, r30
 bae:	b6 01       	movw	r22, r12
 bb0:	90 e0       	ldi	r25, 0x00	; 0
 bb2:	28 d1       	rcall	.+592    	; 0xe04 <fputc>
 bb4:	21 10       	cpse	r2, r1
 bb6:	2a 94       	dec	r2
 bb8:	21 e0       	ldi	r18, 0x01	; 1
 bba:	82 1a       	sub	r8, r18
 bbc:	91 08       	sbc	r9, r1
 bbe:	81 14       	cp	r8, r1
 bc0:	91 04       	cpc	r9, r1
 bc2:	79 f7       	brne	.-34     	; 0xba2 <vfprintf+0x1c4>
 bc4:	e1 c0       	rjmp	.+450    	; 0xd88 <vfprintf+0x3aa>
 bc6:	84 36       	cpi	r24, 0x64	; 100
 bc8:	11 f0       	breq	.+4      	; 0xbce <vfprintf+0x1f0>
 bca:	89 36       	cpi	r24, 0x69	; 105
 bcc:	39 f5       	brne	.+78     	; 0xc1c <vfprintf+0x23e>
 bce:	f8 01       	movw	r30, r16
 bd0:	37 fe       	sbrs	r3, 7
 bd2:	07 c0       	rjmp	.+14     	; 0xbe2 <vfprintf+0x204>
 bd4:	60 81       	ld	r22, Z
 bd6:	71 81       	ldd	r23, Z+1	; 0x01
 bd8:	82 81       	ldd	r24, Z+2	; 0x02
 bda:	93 81       	ldd	r25, Z+3	; 0x03
 bdc:	0c 5f       	subi	r16, 0xFC	; 252
 bde:	1f 4f       	sbci	r17, 0xFF	; 255
 be0:	08 c0       	rjmp	.+16     	; 0xbf2 <vfprintf+0x214>
 be2:	60 81       	ld	r22, Z
 be4:	71 81       	ldd	r23, Z+1	; 0x01
 be6:	07 2e       	mov	r0, r23
 be8:	00 0c       	add	r0, r0
 bea:	88 0b       	sbc	r24, r24
 bec:	99 0b       	sbc	r25, r25
 bee:	0e 5f       	subi	r16, 0xFE	; 254
 bf0:	1f 4f       	sbci	r17, 0xFF	; 255
 bf2:	f3 2d       	mov	r31, r3
 bf4:	ff 76       	andi	r31, 0x6F	; 111
 bf6:	3f 2e       	mov	r3, r31
 bf8:	97 ff       	sbrs	r25, 7
 bfa:	09 c0       	rjmp	.+18     	; 0xc0e <vfprintf+0x230>
 bfc:	90 95       	com	r25
 bfe:	80 95       	com	r24
 c00:	70 95       	com	r23
 c02:	61 95       	neg	r22
 c04:	7f 4f       	sbci	r23, 0xFF	; 255
 c06:	8f 4f       	sbci	r24, 0xFF	; 255
 c08:	9f 4f       	sbci	r25, 0xFF	; 255
 c0a:	f0 68       	ori	r31, 0x80	; 128
 c0c:	3f 2e       	mov	r3, r31
 c0e:	2a e0       	ldi	r18, 0x0A	; 10
 c10:	30 e0       	ldi	r19, 0x00	; 0
 c12:	a3 01       	movw	r20, r6
 c14:	33 d1       	rcall	.+614    	; 0xe7c <__ultoa_invert>
 c16:	88 2e       	mov	r8, r24
 c18:	86 18       	sub	r8, r6
 c1a:	44 c0       	rjmp	.+136    	; 0xca4 <vfprintf+0x2c6>
 c1c:	85 37       	cpi	r24, 0x75	; 117
 c1e:	31 f4       	brne	.+12     	; 0xc2c <vfprintf+0x24e>
 c20:	23 2d       	mov	r18, r3
 c22:	2f 7e       	andi	r18, 0xEF	; 239
 c24:	b2 2e       	mov	r11, r18
 c26:	2a e0       	ldi	r18, 0x0A	; 10
 c28:	30 e0       	ldi	r19, 0x00	; 0
 c2a:	25 c0       	rjmp	.+74     	; 0xc76 <vfprintf+0x298>
 c2c:	93 2d       	mov	r25, r3
 c2e:	99 7f       	andi	r25, 0xF9	; 249
 c30:	b9 2e       	mov	r11, r25
 c32:	8f 36       	cpi	r24, 0x6F	; 111
 c34:	c1 f0       	breq	.+48     	; 0xc66 <vfprintf+0x288>
 c36:	18 f4       	brcc	.+6      	; 0xc3e <vfprintf+0x260>
 c38:	88 35       	cpi	r24, 0x58	; 88
 c3a:	79 f0       	breq	.+30     	; 0xc5a <vfprintf+0x27c>
 c3c:	ae c0       	rjmp	.+348    	; 0xd9a <vfprintf+0x3bc>
 c3e:	80 37       	cpi	r24, 0x70	; 112
 c40:	19 f0       	breq	.+6      	; 0xc48 <vfprintf+0x26a>
 c42:	88 37       	cpi	r24, 0x78	; 120
 c44:	21 f0       	breq	.+8      	; 0xc4e <vfprintf+0x270>
 c46:	a9 c0       	rjmp	.+338    	; 0xd9a <vfprintf+0x3bc>
 c48:	e9 2f       	mov	r30, r25
 c4a:	e0 61       	ori	r30, 0x10	; 16
 c4c:	be 2e       	mov	r11, r30
 c4e:	b4 fe       	sbrs	r11, 4
 c50:	0d c0       	rjmp	.+26     	; 0xc6c <vfprintf+0x28e>
 c52:	fb 2d       	mov	r31, r11
 c54:	f4 60       	ori	r31, 0x04	; 4
 c56:	bf 2e       	mov	r11, r31
 c58:	09 c0       	rjmp	.+18     	; 0xc6c <vfprintf+0x28e>
 c5a:	34 fe       	sbrs	r3, 4
 c5c:	0a c0       	rjmp	.+20     	; 0xc72 <vfprintf+0x294>
 c5e:	29 2f       	mov	r18, r25
 c60:	26 60       	ori	r18, 0x06	; 6
 c62:	b2 2e       	mov	r11, r18
 c64:	06 c0       	rjmp	.+12     	; 0xc72 <vfprintf+0x294>
 c66:	28 e0       	ldi	r18, 0x08	; 8
 c68:	30 e0       	ldi	r19, 0x00	; 0
 c6a:	05 c0       	rjmp	.+10     	; 0xc76 <vfprintf+0x298>
 c6c:	20 e1       	ldi	r18, 0x10	; 16
 c6e:	30 e0       	ldi	r19, 0x00	; 0
 c70:	02 c0       	rjmp	.+4      	; 0xc76 <vfprintf+0x298>
 c72:	20 e1       	ldi	r18, 0x10	; 16
 c74:	32 e0       	ldi	r19, 0x02	; 2
 c76:	f8 01       	movw	r30, r16
 c78:	b7 fe       	sbrs	r11, 7
 c7a:	07 c0       	rjmp	.+14     	; 0xc8a <vfprintf+0x2ac>
 c7c:	60 81       	ld	r22, Z
 c7e:	71 81       	ldd	r23, Z+1	; 0x01
 c80:	82 81       	ldd	r24, Z+2	; 0x02
 c82:	93 81       	ldd	r25, Z+3	; 0x03
 c84:	0c 5f       	subi	r16, 0xFC	; 252
 c86:	1f 4f       	sbci	r17, 0xFF	; 255
 c88:	06 c0       	rjmp	.+12     	; 0xc96 <vfprintf+0x2b8>
 c8a:	60 81       	ld	r22, Z
 c8c:	71 81       	ldd	r23, Z+1	; 0x01
 c8e:	80 e0       	ldi	r24, 0x00	; 0
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	0e 5f       	subi	r16, 0xFE	; 254
 c94:	1f 4f       	sbci	r17, 0xFF	; 255
 c96:	a3 01       	movw	r20, r6
 c98:	f1 d0       	rcall	.+482    	; 0xe7c <__ultoa_invert>
 c9a:	88 2e       	mov	r8, r24
 c9c:	86 18       	sub	r8, r6
 c9e:	fb 2d       	mov	r31, r11
 ca0:	ff 77       	andi	r31, 0x7F	; 127
 ca2:	3f 2e       	mov	r3, r31
 ca4:	36 fe       	sbrs	r3, 6
 ca6:	0d c0       	rjmp	.+26     	; 0xcc2 <vfprintf+0x2e4>
 ca8:	23 2d       	mov	r18, r3
 caa:	2e 7f       	andi	r18, 0xFE	; 254
 cac:	a2 2e       	mov	r10, r18
 cae:	89 14       	cp	r8, r9
 cb0:	58 f4       	brcc	.+22     	; 0xcc8 <vfprintf+0x2ea>
 cb2:	34 fe       	sbrs	r3, 4
 cb4:	0b c0       	rjmp	.+22     	; 0xccc <vfprintf+0x2ee>
 cb6:	32 fc       	sbrc	r3, 2
 cb8:	09 c0       	rjmp	.+18     	; 0xccc <vfprintf+0x2ee>
 cba:	83 2d       	mov	r24, r3
 cbc:	8e 7e       	andi	r24, 0xEE	; 238
 cbe:	a8 2e       	mov	r10, r24
 cc0:	05 c0       	rjmp	.+10     	; 0xccc <vfprintf+0x2ee>
 cc2:	b8 2c       	mov	r11, r8
 cc4:	a3 2c       	mov	r10, r3
 cc6:	03 c0       	rjmp	.+6      	; 0xcce <vfprintf+0x2f0>
 cc8:	b8 2c       	mov	r11, r8
 cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x2f0>
 ccc:	b9 2c       	mov	r11, r9
 cce:	a4 fe       	sbrs	r10, 4
 cd0:	0f c0       	rjmp	.+30     	; 0xcf0 <vfprintf+0x312>
 cd2:	fe 01       	movw	r30, r28
 cd4:	e8 0d       	add	r30, r8
 cd6:	f1 1d       	adc	r31, r1
 cd8:	80 81       	ld	r24, Z
 cda:	80 33       	cpi	r24, 0x30	; 48
 cdc:	21 f4       	brne	.+8      	; 0xce6 <vfprintf+0x308>
 cde:	9a 2d       	mov	r25, r10
 ce0:	99 7e       	andi	r25, 0xE9	; 233
 ce2:	a9 2e       	mov	r10, r25
 ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <vfprintf+0x31a>
 ce6:	a2 fe       	sbrs	r10, 2
 ce8:	06 c0       	rjmp	.+12     	; 0xcf6 <vfprintf+0x318>
 cea:	b3 94       	inc	r11
 cec:	b3 94       	inc	r11
 cee:	04 c0       	rjmp	.+8      	; 0xcf8 <vfprintf+0x31a>
 cf0:	8a 2d       	mov	r24, r10
 cf2:	86 78       	andi	r24, 0x86	; 134
 cf4:	09 f0       	breq	.+2      	; 0xcf8 <vfprintf+0x31a>
 cf6:	b3 94       	inc	r11
 cf8:	a3 fc       	sbrc	r10, 3
 cfa:	10 c0       	rjmp	.+32     	; 0xd1c <vfprintf+0x33e>
 cfc:	a0 fe       	sbrs	r10, 0
 cfe:	06 c0       	rjmp	.+12     	; 0xd0c <vfprintf+0x32e>
 d00:	b2 14       	cp	r11, r2
 d02:	80 f4       	brcc	.+32     	; 0xd24 <vfprintf+0x346>
 d04:	28 0c       	add	r2, r8
 d06:	92 2c       	mov	r9, r2
 d08:	9b 18       	sub	r9, r11
 d0a:	0d c0       	rjmp	.+26     	; 0xd26 <vfprintf+0x348>
 d0c:	b2 14       	cp	r11, r2
 d0e:	58 f4       	brcc	.+22     	; 0xd26 <vfprintf+0x348>
 d10:	b6 01       	movw	r22, r12
 d12:	80 e2       	ldi	r24, 0x20	; 32
 d14:	90 e0       	ldi	r25, 0x00	; 0
 d16:	76 d0       	rcall	.+236    	; 0xe04 <fputc>
 d18:	b3 94       	inc	r11
 d1a:	f8 cf       	rjmp	.-16     	; 0xd0c <vfprintf+0x32e>
 d1c:	b2 14       	cp	r11, r2
 d1e:	18 f4       	brcc	.+6      	; 0xd26 <vfprintf+0x348>
 d20:	2b 18       	sub	r2, r11
 d22:	02 c0       	rjmp	.+4      	; 0xd28 <vfprintf+0x34a>
 d24:	98 2c       	mov	r9, r8
 d26:	21 2c       	mov	r2, r1
 d28:	a4 fe       	sbrs	r10, 4
 d2a:	0f c0       	rjmp	.+30     	; 0xd4a <vfprintf+0x36c>
 d2c:	b6 01       	movw	r22, r12
 d2e:	80 e3       	ldi	r24, 0x30	; 48
 d30:	90 e0       	ldi	r25, 0x00	; 0
 d32:	68 d0       	rcall	.+208    	; 0xe04 <fputc>
 d34:	a2 fe       	sbrs	r10, 2
 d36:	16 c0       	rjmp	.+44     	; 0xd64 <vfprintf+0x386>
 d38:	a1 fc       	sbrc	r10, 1
 d3a:	03 c0       	rjmp	.+6      	; 0xd42 <vfprintf+0x364>
 d3c:	88 e7       	ldi	r24, 0x78	; 120
 d3e:	90 e0       	ldi	r25, 0x00	; 0
 d40:	02 c0       	rjmp	.+4      	; 0xd46 <vfprintf+0x368>
 d42:	88 e5       	ldi	r24, 0x58	; 88
 d44:	90 e0       	ldi	r25, 0x00	; 0
 d46:	b6 01       	movw	r22, r12
 d48:	0c c0       	rjmp	.+24     	; 0xd62 <vfprintf+0x384>
 d4a:	8a 2d       	mov	r24, r10
 d4c:	86 78       	andi	r24, 0x86	; 134
 d4e:	51 f0       	breq	.+20     	; 0xd64 <vfprintf+0x386>
 d50:	a1 fe       	sbrs	r10, 1
 d52:	02 c0       	rjmp	.+4      	; 0xd58 <vfprintf+0x37a>
 d54:	8b e2       	ldi	r24, 0x2B	; 43
 d56:	01 c0       	rjmp	.+2      	; 0xd5a <vfprintf+0x37c>
 d58:	80 e2       	ldi	r24, 0x20	; 32
 d5a:	a7 fc       	sbrc	r10, 7
 d5c:	8d e2       	ldi	r24, 0x2D	; 45
 d5e:	b6 01       	movw	r22, r12
 d60:	90 e0       	ldi	r25, 0x00	; 0
 d62:	50 d0       	rcall	.+160    	; 0xe04 <fputc>
 d64:	89 14       	cp	r8, r9
 d66:	30 f4       	brcc	.+12     	; 0xd74 <vfprintf+0x396>
 d68:	b6 01       	movw	r22, r12
 d6a:	80 e3       	ldi	r24, 0x30	; 48
 d6c:	90 e0       	ldi	r25, 0x00	; 0
 d6e:	4a d0       	rcall	.+148    	; 0xe04 <fputc>
 d70:	9a 94       	dec	r9
 d72:	f8 cf       	rjmp	.-16     	; 0xd64 <vfprintf+0x386>
 d74:	8a 94       	dec	r8
 d76:	f3 01       	movw	r30, r6
 d78:	e8 0d       	add	r30, r8
 d7a:	f1 1d       	adc	r31, r1
 d7c:	80 81       	ld	r24, Z
 d7e:	b6 01       	movw	r22, r12
 d80:	90 e0       	ldi	r25, 0x00	; 0
 d82:	40 d0       	rcall	.+128    	; 0xe04 <fputc>
 d84:	81 10       	cpse	r8, r1
 d86:	f6 cf       	rjmp	.-20     	; 0xd74 <vfprintf+0x396>
 d88:	22 20       	and	r2, r2
 d8a:	09 f4       	brne	.+2      	; 0xd8e <vfprintf+0x3b0>
 d8c:	4e ce       	rjmp	.-868    	; 0xa2a <vfprintf+0x4c>
 d8e:	b6 01       	movw	r22, r12
 d90:	80 e2       	ldi	r24, 0x20	; 32
 d92:	90 e0       	ldi	r25, 0x00	; 0
 d94:	37 d0       	rcall	.+110    	; 0xe04 <fputc>
 d96:	2a 94       	dec	r2
 d98:	f7 cf       	rjmp	.-18     	; 0xd88 <vfprintf+0x3aa>
 d9a:	f6 01       	movw	r30, r12
 d9c:	86 81       	ldd	r24, Z+6	; 0x06
 d9e:	97 81       	ldd	r25, Z+7	; 0x07
 da0:	02 c0       	rjmp	.+4      	; 0xda6 <vfprintf+0x3c8>
 da2:	8f ef       	ldi	r24, 0xFF	; 255
 da4:	9f ef       	ldi	r25, 0xFF	; 255
 da6:	2b 96       	adiw	r28, 0x0b	; 11
 da8:	0f b6       	in	r0, 0x3f	; 63
 daa:	f8 94       	cli
 dac:	de bf       	out	0x3e, r29	; 62
 dae:	0f be       	out	0x3f, r0	; 63
 db0:	cd bf       	out	0x3d, r28	; 61
 db2:	df 91       	pop	r29
 db4:	cf 91       	pop	r28
 db6:	1f 91       	pop	r17
 db8:	0f 91       	pop	r16
 dba:	ff 90       	pop	r15
 dbc:	ef 90       	pop	r14
 dbe:	df 90       	pop	r13
 dc0:	cf 90       	pop	r12
 dc2:	bf 90       	pop	r11
 dc4:	af 90       	pop	r10
 dc6:	9f 90       	pop	r9
 dc8:	8f 90       	pop	r8
 dca:	7f 90       	pop	r7
 dcc:	6f 90       	pop	r6
 dce:	5f 90       	pop	r5
 dd0:	4f 90       	pop	r4
 dd2:	3f 90       	pop	r3
 dd4:	2f 90       	pop	r2
 dd6:	08 95       	ret

00000dd8 <strnlen_P>:
 dd8:	fc 01       	movw	r30, r24
 dda:	05 90       	lpm	r0, Z+
 ddc:	61 50       	subi	r22, 0x01	; 1
 dde:	70 40       	sbci	r23, 0x00	; 0
 de0:	01 10       	cpse	r0, r1
 de2:	d8 f7       	brcc	.-10     	; 0xdda <strnlen_P+0x2>
 de4:	80 95       	com	r24
 de6:	90 95       	com	r25
 de8:	8e 0f       	add	r24, r30
 dea:	9f 1f       	adc	r25, r31
 dec:	08 95       	ret

00000dee <strnlen>:
 dee:	fc 01       	movw	r30, r24
 df0:	61 50       	subi	r22, 0x01	; 1
 df2:	70 40       	sbci	r23, 0x00	; 0
 df4:	01 90       	ld	r0, Z+
 df6:	01 10       	cpse	r0, r1
 df8:	d8 f7       	brcc	.-10     	; 0xdf0 <strnlen+0x2>
 dfa:	80 95       	com	r24
 dfc:	90 95       	com	r25
 dfe:	8e 0f       	add	r24, r30
 e00:	9f 1f       	adc	r25, r31
 e02:	08 95       	ret

00000e04 <fputc>:
 e04:	0f 93       	push	r16
 e06:	1f 93       	push	r17
 e08:	cf 93       	push	r28
 e0a:	df 93       	push	r29
 e0c:	fb 01       	movw	r30, r22
 e0e:	23 81       	ldd	r18, Z+3	; 0x03
 e10:	21 fd       	sbrc	r18, 1
 e12:	03 c0       	rjmp	.+6      	; 0xe1a <fputc+0x16>
 e14:	8f ef       	ldi	r24, 0xFF	; 255
 e16:	9f ef       	ldi	r25, 0xFF	; 255
 e18:	2c c0       	rjmp	.+88     	; 0xe72 <fputc+0x6e>
 e1a:	22 ff       	sbrs	r18, 2
 e1c:	16 c0       	rjmp	.+44     	; 0xe4a <fputc+0x46>
 e1e:	46 81       	ldd	r20, Z+6	; 0x06
 e20:	57 81       	ldd	r21, Z+7	; 0x07
 e22:	24 81       	ldd	r18, Z+4	; 0x04
 e24:	35 81       	ldd	r19, Z+5	; 0x05
 e26:	42 17       	cp	r20, r18
 e28:	53 07       	cpc	r21, r19
 e2a:	44 f4       	brge	.+16     	; 0xe3c <fputc+0x38>
 e2c:	a0 81       	ld	r26, Z
 e2e:	b1 81       	ldd	r27, Z+1	; 0x01
 e30:	9d 01       	movw	r18, r26
 e32:	2f 5f       	subi	r18, 0xFF	; 255
 e34:	3f 4f       	sbci	r19, 0xFF	; 255
 e36:	31 83       	std	Z+1, r19	; 0x01
 e38:	20 83       	st	Z, r18
 e3a:	8c 93       	st	X, r24
 e3c:	26 81       	ldd	r18, Z+6	; 0x06
 e3e:	37 81       	ldd	r19, Z+7	; 0x07
 e40:	2f 5f       	subi	r18, 0xFF	; 255
 e42:	3f 4f       	sbci	r19, 0xFF	; 255
 e44:	37 83       	std	Z+7, r19	; 0x07
 e46:	26 83       	std	Z+6, r18	; 0x06
 e48:	14 c0       	rjmp	.+40     	; 0xe72 <fputc+0x6e>
 e4a:	8b 01       	movw	r16, r22
 e4c:	ec 01       	movw	r28, r24
 e4e:	fb 01       	movw	r30, r22
 e50:	00 84       	ldd	r0, Z+8	; 0x08
 e52:	f1 85       	ldd	r31, Z+9	; 0x09
 e54:	e0 2d       	mov	r30, r0
 e56:	09 95       	icall
 e58:	89 2b       	or	r24, r25
 e5a:	e1 f6       	brne	.-72     	; 0xe14 <fputc+0x10>
 e5c:	d8 01       	movw	r26, r16
 e5e:	16 96       	adiw	r26, 0x06	; 6
 e60:	8d 91       	ld	r24, X+
 e62:	9c 91       	ld	r25, X
 e64:	17 97       	sbiw	r26, 0x07	; 7
 e66:	01 96       	adiw	r24, 0x01	; 1
 e68:	17 96       	adiw	r26, 0x07	; 7
 e6a:	9c 93       	st	X, r25
 e6c:	8e 93       	st	-X, r24
 e6e:	16 97       	sbiw	r26, 0x06	; 6
 e70:	ce 01       	movw	r24, r28
 e72:	df 91       	pop	r29
 e74:	cf 91       	pop	r28
 e76:	1f 91       	pop	r17
 e78:	0f 91       	pop	r16
 e7a:	08 95       	ret

00000e7c <__ultoa_invert>:
 e7c:	fa 01       	movw	r30, r20
 e7e:	aa 27       	eor	r26, r26
 e80:	28 30       	cpi	r18, 0x08	; 8
 e82:	51 f1       	breq	.+84     	; 0xed8 <__ultoa_invert+0x5c>
 e84:	20 31       	cpi	r18, 0x10	; 16
 e86:	81 f1       	breq	.+96     	; 0xee8 <__ultoa_invert+0x6c>
 e88:	e8 94       	clt
 e8a:	6f 93       	push	r22
 e8c:	6e 7f       	andi	r22, 0xFE	; 254
 e8e:	6e 5f       	subi	r22, 0xFE	; 254
 e90:	7f 4f       	sbci	r23, 0xFF	; 255
 e92:	8f 4f       	sbci	r24, 0xFF	; 255
 e94:	9f 4f       	sbci	r25, 0xFF	; 255
 e96:	af 4f       	sbci	r26, 0xFF	; 255
 e98:	b1 e0       	ldi	r27, 0x01	; 1
 e9a:	3e d0       	rcall	.+124    	; 0xf18 <__ultoa_invert+0x9c>
 e9c:	b4 e0       	ldi	r27, 0x04	; 4
 e9e:	3c d0       	rcall	.+120    	; 0xf18 <__ultoa_invert+0x9c>
 ea0:	67 0f       	add	r22, r23
 ea2:	78 1f       	adc	r23, r24
 ea4:	89 1f       	adc	r24, r25
 ea6:	9a 1f       	adc	r25, r26
 ea8:	a1 1d       	adc	r26, r1
 eaa:	68 0f       	add	r22, r24
 eac:	79 1f       	adc	r23, r25
 eae:	8a 1f       	adc	r24, r26
 eb0:	91 1d       	adc	r25, r1
 eb2:	a1 1d       	adc	r26, r1
 eb4:	6a 0f       	add	r22, r26
 eb6:	71 1d       	adc	r23, r1
 eb8:	81 1d       	adc	r24, r1
 eba:	91 1d       	adc	r25, r1
 ebc:	a1 1d       	adc	r26, r1
 ebe:	20 d0       	rcall	.+64     	; 0xf00 <__ultoa_invert+0x84>
 ec0:	09 f4       	brne	.+2      	; 0xec4 <__ultoa_invert+0x48>
 ec2:	68 94       	set
 ec4:	3f 91       	pop	r19
 ec6:	2a e0       	ldi	r18, 0x0A	; 10
 ec8:	26 9f       	mul	r18, r22
 eca:	11 24       	eor	r1, r1
 ecc:	30 19       	sub	r19, r0
 ece:	30 5d       	subi	r19, 0xD0	; 208
 ed0:	31 93       	st	Z+, r19
 ed2:	de f6       	brtc	.-74     	; 0xe8a <__ultoa_invert+0xe>
 ed4:	cf 01       	movw	r24, r30
 ed6:	08 95       	ret
 ed8:	46 2f       	mov	r20, r22
 eda:	47 70       	andi	r20, 0x07	; 7
 edc:	40 5d       	subi	r20, 0xD0	; 208
 ede:	41 93       	st	Z+, r20
 ee0:	b3 e0       	ldi	r27, 0x03	; 3
 ee2:	0f d0       	rcall	.+30     	; 0xf02 <__ultoa_invert+0x86>
 ee4:	c9 f7       	brne	.-14     	; 0xed8 <__ultoa_invert+0x5c>
 ee6:	f6 cf       	rjmp	.-20     	; 0xed4 <__ultoa_invert+0x58>
 ee8:	46 2f       	mov	r20, r22
 eea:	4f 70       	andi	r20, 0x0F	; 15
 eec:	40 5d       	subi	r20, 0xD0	; 208
 eee:	4a 33       	cpi	r20, 0x3A	; 58
 ef0:	18 f0       	brcs	.+6      	; 0xef8 <__ultoa_invert+0x7c>
 ef2:	49 5d       	subi	r20, 0xD9	; 217
 ef4:	31 fd       	sbrc	r19, 1
 ef6:	40 52       	subi	r20, 0x20	; 32
 ef8:	41 93       	st	Z+, r20
 efa:	02 d0       	rcall	.+4      	; 0xf00 <__ultoa_invert+0x84>
 efc:	a9 f7       	brne	.-22     	; 0xee8 <__ultoa_invert+0x6c>
 efe:	ea cf       	rjmp	.-44     	; 0xed4 <__ultoa_invert+0x58>
 f00:	b4 e0       	ldi	r27, 0x04	; 4
 f02:	a6 95       	lsr	r26
 f04:	97 95       	ror	r25
 f06:	87 95       	ror	r24
 f08:	77 95       	ror	r23
 f0a:	67 95       	ror	r22
 f0c:	ba 95       	dec	r27
 f0e:	c9 f7       	brne	.-14     	; 0xf02 <__ultoa_invert+0x86>
 f10:	00 97       	sbiw	r24, 0x00	; 0
 f12:	61 05       	cpc	r22, r1
 f14:	71 05       	cpc	r23, r1
 f16:	08 95       	ret
 f18:	9b 01       	movw	r18, r22
 f1a:	ac 01       	movw	r20, r24
 f1c:	0a 2e       	mov	r0, r26
 f1e:	06 94       	lsr	r0
 f20:	57 95       	ror	r21
 f22:	47 95       	ror	r20
 f24:	37 95       	ror	r19
 f26:	27 95       	ror	r18
 f28:	ba 95       	dec	r27
 f2a:	c9 f7       	brne	.-14     	; 0xf1e <__ultoa_invert+0xa2>
 f2c:	62 0f       	add	r22, r18
 f2e:	73 1f       	adc	r23, r19
 f30:	84 1f       	adc	r24, r20
 f32:	95 1f       	adc	r25, r21
 f34:	a0 1d       	adc	r26, r0
 f36:	08 95       	ret

00000f38 <_exit>:
 f38:	f8 94       	cli

00000f3a <__stop_program>:
 f3a:	ff cf       	rjmp	.-2      	; 0xf3a <__stop_program>
